"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[11491],{3905:function(e,t,o){o.d(t,{Zo:function(){return u},kt:function(){return d}});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function c(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?c(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)o=c[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)o=c[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),l=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(o),d=n,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||c;return o?r.createElement(f,a(a({ref:t},u),{},{components:o})):r.createElement(f,a({ref:t},u))}));function d(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=o.length,a=new Array(c);a[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var l=2;l<c;l++)a[l]=o[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},11567:function(e,t,o){o.r(t),o.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var r=o(87462),n=o(63366),c=(o(67294),o(3905)),a=["components"],i={},s=void 0,l={unversionedId:"IX. \u2018How-to\u2019 guides/75.12 Enable Multiple Connectors with Tomcat",id:"IX. \u2018How-to\u2019 guides/75.12 Enable Multiple Connectors with Tomcat",title:"75.12 Enable Multiple Connectors with Tomcat",description:"75.12 \u542f\u7528Tomcat\u7684\u591a\u8fde\u63a5\u5668",source:"@site/docs/IX. \u2018How-to\u2019 guides/75.12 Enable Multiple Connectors with Tomcat.md",sourceDirName:"IX. \u2018How-to\u2019 guides",slug:"/IX. \u2018How-to\u2019 guides/75.12 Enable Multiple Connectors with Tomcat",permalink:"/Spring-Boot-Reference-Guide/docs/IX. \u2018How-to\u2019 guides/75.12 Enable Multiple Connectors with Tomcat",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IX. \u2018How-to\u2019 guides/75.12 Enable Multiple Connectors with Tomcat.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"75.11 Configure Tomcat",permalink:"/Spring-Boot-Reference-Guide/docs/IX. \u2018How-to\u2019 guides/75.11 Configure Tomcat"},next:{title:"75.13 Use Tomcat\u2019s LegacyCookieProcessor",permalink:"/Spring-Boot-Reference-Guide/docs/IX. \u2018How-to\u2019 guides/75.13 Use Tomcat\u2019s LegacyCookieProcessor"}},u={},p=[{value:"75.12 \u542f\u7528Tomcat\u7684\u591a\u8fde\u63a5\u5668",id:"7512-\u542f\u7528tomcat\u7684\u591a\u8fde\u63a5\u5668",level:3}],m={toc:p};function d(e){var t=e.components,o=(0,n.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h3",{id:"7512-\u542f\u7528tomcat\u7684\u591a\u8fde\u63a5\u5668"},"75.12 \u542f\u7528Tomcat\u7684\u591a\u8fde\u63a5\u5668"),(0,c.kt)("p",null,"\u4f60\u53ef\u4ee5\u5c06",(0,c.kt)("inlineCode",{parentName:"p"},"org.apache.catalina.connector.Connector"),"\u6dfb\u52a0\u5230",(0,c.kt)("inlineCode",{parentName:"p"},"TomcatServletWebServerFactory"),"\uff0c\u8fd9\u5c31\u80fd\u591f\u5141\u8bb8\u591a\u8fde\u63a5\u5668\uff0c\u6bd4\u5982HTTP\u548cHTTPS\u8fde\u63a5\u5668\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'@Bean\npublic ServletWebServerFactory servletContainer() {\n    TomcatServletWebServerFactory tomcat = new TomcatServletWebServerFactory();\n    tomcat.addAdditionalTomcatConnectors(createSslConnector());\n    return tomcat;\n}\n\nprivate Connector createSslConnector() {\n    Connector connector = new Connector("org.apache.coyote.http11.Http11NioProtocol");\n    Http11NioProtocol protocol = (Http11NioProtocol) connector.getProtocolHandler();\n    try {\n        File keystore = new ClassPathResource("keystore").getFile();\n        File truststore = new ClassPathResource("keystore").getFile();\n        connector.setScheme("https");\n        connector.setSecure(true);\n        connector.setPort(8443);\n        protocol.setSSLEnabled(true);\n        protocol.setKeystoreFile(keystore.getAbsolutePath());\n        protocol.setKeystorePass("changeit");\n        protocol.setTruststoreFile(truststore.getAbsolutePath());\n        protocol.setTruststorePass("changeit");\n        protocol.setKeyAlias("apitester");\n        return connector;\n    }\n    catch (IOException ex) {\n        throw new IllegalStateException("can\'t access keystore: [" + "keystore"\n                + "] or truststore: [" + "keystore" + "]", ex);\n    }\n}\n')))}d.isMDXComponent=!0}}]);