"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[49330],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(n),f=o,v=d["".concat(l,".").concat(f)]||d[f]||s[f]||i;return n?r.createElement(v,a(a({ref:t},p),{},{components:n})):r.createElement(v,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},68470:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return s}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],c={},l=void 0,u={unversionedId:"V. Spring Boot Actuator/58.3 Custom context path",id:"V. Spring Boot Actuator/58.3 Custom context path",title:"58.3 Custom context path",description:"58.3 \u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u8def\u5f84",source:"@site/docs/V. Spring Boot Actuator/58.3 Custom context path.md",sourceDirName:"V. Spring Boot Actuator",slug:"/V. Spring Boot Actuator/58.3 Custom context path",permalink:"/Spring-Boot-Reference-Guide/docs/V. Spring Boot Actuator/58.3 Custom context path",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/V. Spring Boot Actuator/58.3 Custom context path.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"58.2 Cloud Foundry Self-signed Certificates",permalink:"/Spring-Boot-Reference-Guide/docs/V. Spring Boot Actuator/58.2 Cloud Foundry Self-signed Certificates"},next:{title:"README",permalink:"/Spring-Boot-Reference-Guide/docs/VI. Deploying Spring Boot Applications/"}},p={},s=[{value:"58.3 \u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u8def\u5f84",id:"583-\u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u8def\u5f84",level:3}],d={toc:s};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"583-\u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u8def\u5f84"},"58.3 \u81ea\u5b9a\u4e49\u4e0a\u4e0b\u6587\u8def\u5f84"),(0,i.kt)("p",null,"\u5982\u679c\u670d\u52a1\u5668\u7684\u4e0a\u4e0b\u6587\u8def\u5f84\u6ca1\u6709\u914d\u7f6e\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"/"),"\uff0c\u5219\u4e91\u8ba1\u7b97\u7aef\u70b9\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6839\u4e0a\u4e0d\u53ef\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u914d\u7f6e\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"server.servlet.context-path=/foo"),", \u5219Cloud Foundry\u7684\u7aef\u70b9\u4f4d\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"/foo/cloudfoundryapplication/*"),"\u3002"),(0,i.kt)("p",null,"\u5982\u679c\u4f60\u5e0c\u671b\u4e91\u8ba1\u7b97\u7aef\u70b9\u59cb\u7ec8\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"/cloudfoundryapplication/*"),"\u4e0a\u53ef\u7528\uff0c\u65e0\u8bba\u670d\u52a1\u5668\u7684\u4e0a\u4e0b\u6587\u8def\u5f84\u5982\u4f55\uff0c\u4f60\u90fd\u9700\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u914d\u7f6e\u5b83\u3002\u914d\u7f6e\u5c06\u6839\u636e\u4f7f\u7528\u7684web\u670d\u52a1\u5668\u800c\u6709\u6240\u4e0d\u540c\u3002\u5bf9\u4e8eTomcat\uff0c\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Bean\npublic TomcatServletWebServerFactory servletWebServerFactory() {\n    return new TomcatServletWebServerFactory() {\n\n        @Override\n        protected void prepareContext(Host host,\n                ServletContextInitializer[] initializers) {\n            super.prepareContext(host, initializers);\n            StandardContext child = new StandardContext();\n            child.addLifecycleListener(new Tomcat.FixContextListener());\n            child.setPath("/cloudfoundryapplication");\n            ServletContainerInitializer initializer = getServletContextInitializer(\n                    getContextPath());\n            child.addServletContainerInitializer(initializer, Collections.emptySet());\n            child.setCrossContext(true);\n            host.addChild(child);\n        }\n\n    };\n}\n\nprivate ServletContainerInitializer getServletContextInitializer(String contextPath) {\n    return (c, context) -> {\n        Servlet servlet = new GenericServlet() {\n\n            @Override\n            public void service(ServletRequest req, ServletResponse res)\n                    throws ServletException, IOException {\n                ServletContext context = req.getServletContext()\n                        .getContext(contextPath);\n                context.getRequestDispatcher("/cloudfoundryapplication").forward(req,\n                        res);\n            }\n\n        };\n        context.addServlet("cloudfoundry", servlet).addMapping("/*");\n    };\n}\n')))}f.isMDXComponent=!0}}]);