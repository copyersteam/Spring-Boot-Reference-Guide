"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[78657],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),g=u(t),m=o,f=g["".concat(c,".").concat(m)]||g[m]||l[m]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=g;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2567:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return l}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],p={},c=void 0,u={unversionedId:"IV. Spring Boot features/23.7. Accessing Application Arguments",id:"IV. Spring Boot features/23.7. Accessing Application Arguments",title:"23.7. Accessing Application Arguments",description:"23.7 \u8bbf\u95ee\u5e94\u7528\u53c2\u6570",source:"@site/docs/IV. Spring Boot features/23.7. Accessing Application Arguments.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/23.7. Accessing Application Arguments",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/23.7. Accessing Application Arguments",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/23.7. Accessing Application Arguments.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"23.6. Web Environment",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/23.6. Web Environment"},next:{title:"23.8. Using the ApplicationRunner or CommandLineRunner",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/23.8. Using the ApplicationRunner or CommandLineRunner"}},s={},l=[{value:"23.7 \u8bbf\u95ee\u5e94\u7528\u53c2\u6570",id:"237-\u8bbf\u95ee\u5e94\u7528\u53c2\u6570",level:3}],g={toc:l};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"237-\u8bbf\u95ee\u5e94\u7528\u53c2\u6570"},"23.7 \u8bbf\u95ee\u5e94\u7528\u53c2\u6570"),(0,i.kt)("p",null,"\u5982\u679c\u9700\u8981\u83b7\u53d6\u4f20\u9012\u7ed9",(0,i.kt)("inlineCode",{parentName:"p"},"SpringApplication.run(\u2026)"),"\u7684\u5e94\u7528\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u6ce8\u5165\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"org.springframework.boot.ApplicationArguments"),"\u7c7b\u578b\u7684bean\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"ApplicationArguments"),"\u63a5\u53e3\u5373\u63d0\u4f9b\u5bf9\u539f\u59cb",(0,i.kt)("inlineCode",{parentName:"p"},"String[]"),"\u53c2\u6570\u7684\u8bbf\u95ee\uff0c\u4e5f\u63d0\u4f9b\u5bf9\u89e3\u6790\u6210",(0,i.kt)("inlineCode",{parentName:"p"},"option"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"non-option"),"\u53c2\u6570\u7684\u8bbf\u95ee\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import org.springframework.boot.*\nimport org.springframework.beans.factory.annotation.*\nimport org.springframework.stereotype.*\n\n@Component\npublic class MyBean {\n\n    @Autowired\n    public MyBean(ApplicationArguments args) {\n        boolean debug = args.containsOption("debug");\n        List<String> files = args.getNonOptionArgs();\n        // if run with "--debug logfile.txt" debug=true, files=["logfile.txt"]\n    }\n\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," Spring Boot\u4e5f\u4f1a\u6ce8\u518c\u4e00\u4e2a\u5305\u542bSpring ",(0,i.kt)("inlineCode",{parentName:"p"},"Environment"),"\u5c5e\u6027\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"CommandLinePropertySource"),"\uff0c\u8fd9\u5c31\u5141\u8bb8\u4f60\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@Value"),"\u6ce8\u89e3\u6ce8\u5165\u5355\u4e2a\u7684\u5e94\u7528\u53c2\u6570\u3002"))}m.isMDXComponent=!0}}]);