"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[32333],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return g}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),f=s(t),g=o,d=f["".concat(c,".").concat(g)]||f[g]||u[g]||i;return t?r.createElement(d,a(a({ref:n},l),{},{components:t})):r.createElement(d,a({ref:n},l))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},92706:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return u}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],p={},c=void 0,s={unversionedId:"VII. Spring Boot CLI/Developing Application with the Groovy Beans DSL",id:"VII. Spring Boot CLI/Developing Application with the Groovy Beans DSL",title:"Developing Application with the Groovy Beans DSL",description:"65. \u4f7f\u7528Groovy beans DSL\u5f00\u53d1\u5e94\u7528",source:"@site/docs/VII. Spring Boot CLI/65. Developing Application with the Groovy Beans DSL.md",sourceDirName:"VII. Spring Boot CLI",slug:"/VII. Spring Boot CLI/Developing Application with the Groovy Beans DSL",permalink:"/Spring-Boot-Reference-Guide/docs/VII. Spring Boot CLI/Developing Application with the Groovy Beans DSL",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/VII. Spring Boot CLI/65. Developing Application with the Groovy Beans DSL.md",tags:[],version:"current",sidebarPosition:65,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using the CLI",permalink:"/Spring-Boot-Reference-Guide/docs/VII. Spring Boot CLI/Using the CLI"},next:{title:"Configuring the CLI with settings.xml",permalink:"/Spring-Boot-Reference-Guide/docs/VII. Spring Boot CLI/Configuring the CLI with settings.xml"}},l={},u=[{value:"65. \u4f7f\u7528Groovy beans DSL\u5f00\u53d1\u5e94\u7528",id:"65-\u4f7f\u7528groovy-beans-dsl\u5f00\u53d1\u5e94\u7528",level:3}],f={toc:u};function g(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"65-\u4f7f\u7528groovy-beans-dsl\u5f00\u53d1\u5e94\u7528"},"65. \u4f7f\u7528Groovy beans DSL\u5f00\u53d1\u5e94\u7528"),(0,i.kt)("p",null,"Spring\u6846\u67b64.0\u7248\u672c\u5bf9",(0,i.kt)("inlineCode",{parentName:"p"},"beans{}"),'"DSL"\uff08\u501f\u9274\u81ea',(0,i.kt)("a",{parentName:"p",href:"http://grails.org/"},"Grails"),"\uff09\u63d0\u4f9b\u539f\u751f\u652f\u6301\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u683c\u5f0f\u5728Groovy\u5e94\u7528\u7a0b\u5e8f\u811a\u672c\u4e2d\u5d4c\u5165bean\u5b9a\u4e49\u3002\u6709\u65f6\u8fd9\u662f\u5f15\u5165\u5916\u90e8\u7279\u6027\u7684\u5f88\u597d\u65b9\u5f0f\uff0c\u6bd4\u5982\u4e2d\u95f4\u4ef6\u58f0\u660e\uff0c\u4f8b\u5982\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\nclass Application implements CommandLineRunner {\n\n    @Autowired\n    SharedService service\n\n    @Override\n    void run(String... args) {\n        println service.message\n    }\n\n}\n\nimport my.company.SharedService\n\nbeans {\n    service(SharedService) {\n        message = "Hello World"\n    }\n}\n')),(0,i.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"beans{}"),"\u6df7\u5408\u4f4d\u4e8e\u76f8\u540c\u6587\u4ef6\u7684\u7c7b\u58f0\u660e\uff0c\u53ea\u8981\u5b83\u4eec\u90fd\u5904\u4e8e\u9876\u7ea7\uff0c\u6216\u5982\u679c\u559c\u6b22\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u5c06beans DSL\u653e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u4e2d\u3002"))}g.isMDXComponent=!0}}]);