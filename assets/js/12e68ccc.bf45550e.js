"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[24907],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),g=c(n),m=o,d=g["".concat(p,".").concat(m)]||g[m]||l[m]||i;return n?r.createElement(d,s(s({ref:t},u),{},{components:n})):r.createElement(d,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=g;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},91515:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),s=["components"],a={},p=void 0,c={unversionedId:"IV. Spring Boot features/43.3.18 Auto-configured Spring REST Docs Tests",id:"IV. Spring Boot features/43.3.18 Auto-configured Spring REST Docs Tests",title:"43.3.18 Auto-configured Spring REST Docs Tests",description:"43.3.18 \u81ea\u52a8\u914d\u7f6e\u7684Spring REST Docs\u6d4b\u8bd5",source:"@site/docs/IV. Spring Boot features/43.3.18 Auto-configured Spring REST Docs Tests.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/43.3.18 Auto-configured Spring REST Docs Tests",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.18 Auto-configured Spring REST Docs Tests",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/43.3.18 Auto-configured Spring REST Docs Tests.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"43.3.17 Auto-configured REST Clients",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.17 Auto-configured REST Clients"},next:{title:"43.3.19 User Configuration and Slicing",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.19 User Configuration and Slicing"}},u={},l=[{value:"43.3.18 \u81ea\u52a8\u914d\u7f6e\u7684Spring REST Docs\u6d4b\u8bd5",id:"43318-\u81ea\u52a8\u914d\u7f6e\u7684spring-rest-docs\u6d4b\u8bd5",level:3}],g={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"43318-\u81ea\u52a8\u914d\u7f6e\u7684spring-rest-docs\u6d4b\u8bd5"},"43.3.18 \u81ea\u52a8\u914d\u7f6e\u7684Spring REST Docs\u6d4b\u8bd5"),(0,i.kt)("p",null,"\u4e3a\u4e86\u5728\u6d4b\u8bd5\u91cc\u4f7f\u7528",(0,i.kt)("a",{parentName:"p",href:"https://projects.spring.io/spring-restdocs/"},"Spring REST Docs"),"\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureRestDocs"),"\u6ce8\u89e3\u3002\u5b83\u79fb\u9664\u4e86Spring REST Docs\u91cc\u5bf9JUnit\u89c4\u5219\u7684\u9700\u8981\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureRestDocs"),"\u53ef\u7528\u4e8e\u8986\u76d6\u9ed8\u8ba4\u7684\u8f93\u51fa\u76ee\u5f55\uff08\u5982\u679c\u4f60\u4f7f\u7528Maven\uff0c\u76ee\u5f55\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"target/generated-snippets"),"\u3002\u5982\u679c\u4f60\u4f7f\u7528Gradle\uff0c\u5219\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"build/generated-snippets"),"\uff09\u3002\u5b83\u4e5f\u53ef\u4ee5\u7528\u4e8e\u914d\u7f6e\u51fa\u73b0\u5728\u4efb\u4f55\u6587\u6863\u5316\u7684URI\u91cc\u7684\u4e3b\u673a\u3001\u65b9\u6848\u3001\u7aef\u53e3\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u4f7f\u7528Mock MVC\u7684\u81ea\u52a8\u914d\u7f6e\u7684Spring REST Docs\u6d4b\u8bd5")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureRestDocs"),"\u81ea\u5b9a\u4e49",(0,i.kt)("inlineCode",{parentName:"p"},"MockMvc")," bean\u6765\u4f7f\u7528Spring REST Docs\u3002\u5f53\u4f60\u4f7f\u7528Mock MVC\u548cSpring REST Docs\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@Autowired"),"\u5c06\u5176\u6ce8\u5165\uff0c\u597d\u5728\u6d4b\u8bd5\u91cc\u4f7f\u7528\u3002\u5982\u4e0b\u6240\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;\nimport org.springframework.http.MediaType;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport org.springframework.test.web.servlet.MockMvc;\n\nimport static org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.document;\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;\n\n@RunWith(SpringRunner.class)\n@WebMvcTest(UserController.class)\n@AutoConfigureRestDocs\npublic class UserDocumentationTests {\n\n    @Autowired\n    private MockMvc mvc;\n\n    @Test\n    public void listUsers() throws Exception {\n        this.mvc.perform(get("/users").accept(MediaType.TEXT_PLAIN))\n                .andExpect(status().isOk())\n                .andDo(document("list-users"));\n    }\n\n}\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureRestDocs"),"\u80fd\u591f\u7528\u4e8e\u8986\u76d6\u9ed8\u8ba4\u7684\u8f93\u51fa\u76ee\u5f55\uff08\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fMaven\uff0c\u9ed8\u8ba4\u7684\u8f93\u51fa\u76ee\u5f55\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"target/generated-snippets"),"\u3002\u4f7f\u7528\u7684\u662fGradle\u7684\u8bdd\uff0c\u5c31\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"build/generated-snippets"),"\uff09\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureRestDocs"),"\u4e5f\u80fd\u914d\u7f6e\u5c06\u51fa\u73b0\u5728\u4efb\u4f55\u6587\u6863\u5316\u7684URLs\u4e2d\u7684\u90e8\u5206\uff0c\u6bd4\u5982host\uff0cscheme\u548cport\u7b49\u3002\u5982\u679c\u9700\u8981\u63a7\u5236\u66f4\u591aSpring REST Docs\u7684\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"RestDocsMockMvcConfigurationCustomizer")," bean\uff1a"),(0,i.kt)("p",null,"\u5982\u679c\u4f60\u9700\u8981\u63a7\u5236\u66f4\u591a\u7684Spring REST Docs\u7684\u914d\u7f6e\uff0c\u8fd9\u4e9b\u914d\u7f6e\u8d85\u51fa\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureRestDocs"),"\u5c5e\u6027\u63d0\u4f9b\u7684\u8303\u56f4\u3002\u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"RestDocsMockMvcConfigurationCustomizer")," bean\u3002\u5982\u4e0b\u6240\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@TestConfiguration\nstatic class CustomizationConfiguration\n        implements RestDocsMockMvcConfigurationCustomizer {\n\n    @Override\n    public void customize(MockMvcRestDocumentationConfigurer configurer) {\n        configurer.snippets().withTemplateFormat(TemplateFormats.markdown());\n    }\n\n}\n")),(0,i.kt)("p",null,"\u5982\u679c\u60f3\u5145\u5206\u5229\u7528Spring REST Docs\u5bf9\u53c2\u6570\u5316\u8f93\u51fa\u76ee\u5f55\u7684\u652f\u6301\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"RestDocumentationResultHandler")," bean\uff0c\u81ea\u52a8\u914d\u7f6e\u5c06\u4f7f\u7528\u5b83\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"alwaysDo"),"\u65b9\u6cd5\uff0c\u8fdb\u800c\u4fc3\u4f7f\u6bcf\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"MockMvc"),"\u8c03\u7528\u90fd\u4f1a\u81ea\u52a8\u4ea7\u751f\u9ed8\u8ba4\u7247\u6bb5\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"RestDocumentationResultHandler"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@TestConfiguration\nstatic class ResultHandlerConfiguration {\n\n    @Bean\n    public RestDocumentationResultHandler restDocumentation() {\n        return MockMvcRestDocumentation.document("{method-name}");\n    }\n\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u4f7f\u7528REST Assured\u7684\u81ea\u52a8\u914d\u7f6e\u7684Spring REST Docs\u6d4b\u8bd5")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureRestDocs"),"\u521b\u5efa\u4e86\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"RequestSpecification")," bean\uff0c\u9884\u914d\u7f6e\u4e3a\u4f7f\u7528Spring REST Docs\u3002\u5f53\u4f60\u4f7f\u7528REST Assured\u548cSpring REST Docs\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@Autowired"),"\u5c06\u5176\u6ce8\u5165\uff0c\u597d\u5728\u6d4b\u8bd5\u91cc\u4f7f\u7528\u3002\u5982\u4e0b\u6240\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import io.restassured.specification.RequestSpecification;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\nimport org.springframework.boot.web.server.LocalServerPort;\nimport org.springframework.test.context.junit4.SpringRunner;\n\nimport static io.restassured.RestAssured.given;\nimport static org.hamcrest.CoreMatchers.is;\nimport static org.springframework.restdocs.restassured3.RestAssuredRestDocumentation.document;\n\n@RunWith(SpringRunner.class)\n@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\n@AutoConfigureRestDocs\npublic class UserDocumentationTests {\n\n    @LocalServerPort\n    private int port;\n\n    @Autowired\n    private RequestSpecification documentationSpec;\n\n    @Test\n    public void listUsers() {\n        given(this.documentationSpec).filter(document("list-users")).when()\n                .port(this.port).get("/").then().assertThat().statusCode(is(200));\n    }\n\n}\n')),(0,i.kt)("p",null,"\u5982\u679c\u4f60\u9700\u8981\u63a7\u5236\u66f4\u591a\u7684Spring REST Docs\u7684\u914d\u7f6e\uff0c\u8fd9\u4e9b\u914d\u7f6e\u8d85\u51fa\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureRestDocs"),"\u5c5e\u6027\u63d0\u4f9b\u7684\u8303\u56f4\u3002\u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"RestDocsRestAssuredConfigurationCustomizer")," bean\u3002\u5982\u4e0b\u6240\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@TestConfiguration\npublic static class CustomizationConfiguration\n        implements RestDocsRestAssuredConfigurationCustomizer {\n\n    @Override\n    public void customize(RestAssuredRestDocumentationConfigurer configurer) {\n        configurer.snippets().withTemplateFormat(TemplateFormats.markdown());\n    }\n\n}\n")))}m.isMDXComponent=!0}}]);