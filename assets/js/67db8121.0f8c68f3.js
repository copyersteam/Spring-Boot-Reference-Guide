"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[22950],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(n),d=o,g=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},12165:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],s={},c=void 0,u={unversionedId:"IV. Spring Boot features/43.3.17 Auto-configured REST Clients",id:"IV. Spring Boot features/43.3.17 Auto-configured REST Clients",title:"43.3.17 Auto-configured REST Clients",description:"43.3.17 \u81ea\u52a8\u914d\u7f6e\u7684REST\u5ba2\u6237\u7aef",source:"@site/docs/IV. Spring Boot features/43.3.17 Auto-configured REST Clients.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/43.3.17 Auto-configured REST Clients",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.17 Auto-configured REST Clients",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/43.3.17 Auto-configured REST Clients.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"43.3.16 Auto-configured Data LDAP Tests",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.16 Auto-configured Data LDAP Tests"},next:{title:"43.3.18 Auto-configured Spring REST Docs Tests",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.18 Auto-configured Spring REST Docs Tests"}},l={},p=[{value:"43.3.17 \u81ea\u52a8\u914d\u7f6e\u7684REST\u5ba2\u6237\u7aef",id:"43317-\u81ea\u52a8\u914d\u7f6e\u7684rest\u5ba2\u6237\u7aef",level:3}],f={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"43317-\u81ea\u52a8\u914d\u7f6e\u7684rest\u5ba2\u6237\u7aef"},"43.3.17 \u81ea\u52a8\u914d\u7f6e\u7684REST\u5ba2\u6237\u7aef"),(0,i.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@RestClientTest"),"\u6d4b\u8bd5REST\u5ba2\u6237\u7aef\u3002\u5b83\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u914d\u7f6eJackson\u3001GSON\u548cJsonb\uff0c\u914d\u7f6e",(0,i.kt)("inlineCode",{parentName:"p"},"RestTemplateBuilder"),"\uff0c\u5e76\u6dfb\u52a0",(0,i.kt)("inlineCode",{parentName:"p"},"MockRestServiceServer"),"\u652f\u6301\u3002\u4f60\u9700\u8981\u5c06",(0,i.kt)("inlineCode",{parentName:"p"},"@RestClientTest"),"\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"\u6216",(0,i.kt)("inlineCode",{parentName:"p"},"components"),"\u5c5e\u6027\u503c\u8bbe\u7f6e\u4e3a\u5f85\u6d4b\u8bd5\u7c7b\u3002\u5982\u4e0b\u6240\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@RunWith(SpringRunner.class)\n@RestClientTest(RemoteVehicleDetailsService.class)\npublic class ExampleRestClientTest {\n\n    @Autowired\n    private RemoteVehicleDetailsService service;\n\n    @Autowired\n    private MockRestServiceServer server;\n\n    @Test\n    public void getVehicleDetailsWhenResultIsSuccessShouldReturnDetails()\n            throws Exception {\n        this.server.expect(requestTo("/greet/details"))\n                .andRespond(withSuccess("hello", MediaType.TEXT_PLAIN));\n        String greeting = this.service.callRestService();\n        assertThat(greeting).isEqualTo("hello");\n    }\n\n}\n')),(0,i.kt)("p",null,"\u5728",(0,i.kt)("a",{parentName:"p",href:"http://docs.spring.io/spring-boot/docs/2.0.0.RELEASE/reference/htmlsingle/#test-auto-configuration"},"\u9644\u5f55"),"\u4e2d\u53ef\u4ee5\u67e5\u770b",(0,i.kt)("inlineCode",{parentName:"p"},"@RestClientTest"),"\u542f\u7528\u7684\u81ea\u52a8\u914d\u7f6e\u5217\u8868\u3002"))}d.isMDXComponent=!0}}]);