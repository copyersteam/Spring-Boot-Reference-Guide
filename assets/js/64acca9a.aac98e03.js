"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[84699],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),g=s(r),m=o,d=g["".concat(p,".").concat(m)]||g[m]||l[m]||a;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=g;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},43124:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return l}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],c={},p=void 0,s={unversionedId:"V. Spring Boot Actuator/54.1 Getting started",id:"V. Spring Boot Actuator/54.1 Getting started",title:"54.1 Getting started",description:"54.1 \u5165\u95e8\u6307\u5357",source:"@site/docs/V. Spring Boot Actuator/54.1 Getting started.md",sourceDirName:"V. Spring Boot Actuator",slug:"/V. Spring Boot Actuator/54.1 Getting started",permalink:"/Spring-Boot-Reference-Guide/docs/V. Spring Boot Actuator/54.1 Getting started",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/V. Spring Boot Actuator/54.1 Getting started.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"53.1 Configure a Logger",permalink:"/Spring-Boot-Reference-Guide/docs/V. Spring Boot Actuator/53.1 Configure a Logger"},next:{title:"54.2.1 Atlas",permalink:"/Spring-Boot-Reference-Guide/docs/V. Spring Boot Actuator/54.2.1 Atlas"}},u={},l=[{value:"54.1 \u5165\u95e8\u6307\u5357",id:"541-\u5165\u95e8\u6307\u5357",level:3}],g={toc:l};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"541-\u5165\u95e8\u6307\u5357"},"54.1 \u5165\u95e8\u6307\u5357"),(0,a.kt)("p",null,"Spring Boot\u4f1a\u81ea\u52a8\u914d\u7f6e\u4e00\u4e2a\u590d\u5408",(0,a.kt)("inlineCode",{parentName:"p"},"MeterRegistry"),"\uff0c\u5e76\u4e3a\u5b83\u5728\u7c7b\u8def\u5f84\u4e0a\u627e\u5230\u7684\u6bcf\u4e2a\u53d7\u652f\u6301\u7684\u5b9e\u73b0\u5411\u590d\u5408\u6dfb\u52a0\u6ce8\u518c\u3002\u5728\u8fd0\u884c\u65f6\u7c7b\u8def\u5f84\u4e2d\u4f9d\u8d56\u4e8e",(0,a.kt)("inlineCode",{parentName:"p"},"micrometer-registry-{system}"),"\u5c31\u8db3\u4ee5\u8ba9Spring Boot\u914d\u7f6e\u6ce8\u518c\u8868\u3002"),(0,a.kt)("p",null,"\u5927\u591a\u6570\u6ce8\u518c\u8868\u90fd\u5177\u6709\u76f8\u540c\u7684\u7279\u6027\u3002\u4f8b\u5982\uff0c\u5373\u4f7fMicrometer\u6ce8\u518c\u8868\u5b9e\u73b0\u4f4d\u4e8e\u7c7b\u8def\u5f84\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u7981\u7528\u7279\u5b9a\u7684\u6ce8\u518c\u8868\u3002\u4f8b\u5982\uff0c\u8981\u7981\u7528Datadog\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-properties"},"management.metrics.export.datadog.enabled=false\n")),(0,a.kt)("p",null,"Spring Boot\u8fd8\u4f1a\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"Metrics"),"\u7c7b\u7684\u5168\u5c40\u9759\u6001\u590d\u5408\u6ce8\u518c\u8868\u4e2d\u6dfb\u52a0\u4efb\u4f55\u81ea\u52a8\u914d\u7f6e\u7684\u6ce8\u518c\u8868\uff0c\u9664\u975e\u60a8\u660e\u786e\u544a\u8bc9\u5b83\u4e0d\u8981\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-properties"},"management.metrics.use-global-registry=false\n")),(0,a.kt)("p",null,"\u4f60\u53ef\u4ee5\u6ce8\u518c\u4efb\u4f55\u6570\u91cf\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"MeterRegistryCustomizer")," bean\u6765\u8fdb\u4e00\u6b65\u914d\u7f6e\u6ce8\u518c\u8868\u3002\u4f8b\u5982\u5728\u6ce8\u518c\u8868\u6ce8\u518c\u4efb\u4f55meter\u4e4b\u524d\u5e94\u7528\u901a\u7528\u6807\u7b7e\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Bean\nMeterRegistryCustomizer<MeterRegistry> metricsCommonTags() {\n    return registry -> registry.config().commonTags("region", "us-east-1");\n}\n')),(0,a.kt)("p",null,"\u60a8\u53ef\u4ee5\u901a\u8fc7\u66f4\u5177\u4f53\u7684\u6cdb\u578b\u7c7b\u578b\u5c06\u5b9a\u5236\u5e94\u7528\u5230\u7279\u5b9a\u7684\u6ce8\u518c\u8868\u5b9e\u73b0\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\nMeterRegistryCustomizer<GraphiteMeterRegistry> graphiteMetricsNamingConvention() {\n    return registry -> registry.config().namingConvention(MY_CUSTOM_CONVENTION);\n}\n")),(0,a.kt)("p",null,"\u6709\u4e86\u8fd9\u6837\u7684\u8bbe\u7f6e\uff0c\u4f60\u53ef\u4ee5\u6ce8\u5165",(0,a.kt)("inlineCode",{parentName:"p"},"MeterRegistry"),"\u5728\u4f60\u7684\u7ec4\u4ef6\u548c\u6ce8\u518c\u6307\u6807\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Component\npublic class SampleBean {\n\n    private final Counter counter;\n\n    public SampleBean(MeterRegistry registry) {\n        this.counter = registry.counter("received.messages");\n    }\n\n    public void handleMessage(String message) {\n        this.counter.increment();\n        // handle message implementation\n    }\n\n}\n')),(0,a.kt)("p",null,"Spring Boot\u8fd8",(0,a.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/2.0.0.RELEASE/reference/htmlsingle/#production-ready-metrics-meter"},"\u914d\u7f6e\u4e86\u5185\u7f6e\u7684\u5de5\u5177"),"\uff08\u5373",(0,a.kt)("inlineCode",{parentName:"p"},"MeterBinder"),"\u5b9e\u73b0\uff09\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6216\u4e13\u7528\u7684\u6ce8\u91ca\u6807\u8bb0\u6765\u63a7\u5236\u8fd9\u4e9b\u5de5\u5177\u3002"))}m.isMDXComponent=!0}}]);