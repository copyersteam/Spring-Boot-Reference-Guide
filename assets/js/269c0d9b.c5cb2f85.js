"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[52318],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=s(t),g=o,f=m["".concat(c,".").concat(g)]||m[g]||l[g]||i;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1672:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return l}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],p={},c=void 0,s={unversionedId:"IV. Spring Boot features/43.3.5 Mocking and Spying Beans",id:"IV. Spring Boot features/43.3.5 Mocking and Spying Beans",title:"43.3.5 Mocking and Spying Beans",description:"43.3.5 \u6a21\u62df\u548c\u76d1\u89c6bean",source:"@site/docs/IV. Spring Boot features/43.3.5 Mocking and Spying Beans.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/43.3.5 Mocking and Spying Beans",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.5 Mocking and Spying Beans",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/43.3.5 Mocking and Spying Beans.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"43.3.4 Testing with a running server",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.4 Testing with a running server"},next:{title:"43.3.6 Auto-configured Tests",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.6 Auto-configured Tests"}},u={},l=[{value:"43.3.5 \u6a21\u62df\u548c\u76d1\u89c6bean",id:"4335-\u6a21\u62df\u548c\u76d1\u89c6bean",level:3}],m={toc:l};function g(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"4335-\u6a21\u62df\u548c\u76d1\u89c6bean"},"43.3.5 \u6a21\u62df\u548c\u76d1\u89c6bean"),(0,i.kt)("p",null,"\u6709\u65f6\u5019\u9700\u8981\u5728\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6mock\u4e00\u4e9b\u7ec4\u4ef6\uff0c\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u8fdc\u7a0b\u670d\u52a1\u7684\u95e8\u9762\uff0c\u4f46\u5728\u5f00\u53d1\u671f\u95f4\u4e0d\u53ef\u7528\u3002Mocking\u5728\u6a21\u62df\u771f\u5b9e\u73af\u5883\u5f88\u96be\u590d\u73b0\u7684\u5931\u8d25\u60c5\u51b5\u65f6\u975e\u5e38\u6709\u7528\u3002"),(0,i.kt)("p",null,"Spring Boot\u63d0\u4f9b\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"@MockBean"),"\u6ce8\u89e3\uff0c\u53ef\u7528\u4e8e\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"ApplicationContext"),"\u4e2d\u7684bean\u5b9a\u4e49\u4e00\u4e2aMockito mock\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8be5\u6ce8\u89e3\u6dfb\u52a0\u65b0beans\uff0c\u6216\u66ff\u6362\u5df2\u5b58\u5728\u7684bean\u5b9a\u4e49\u3002\u8be5\u6ce8\u89e3\u53ef\u76f4\u63a5\u7528\u4e8e\u6d4b\u8bd5\u7c7b\uff0c\u4e5f\u53ef\u7528\u4e8e\u6d4b\u8bd5\u7c7b\u7684\u5b57\u6bb5\uff0c\u6216\u7528\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"@Configuration"),"\u6ce8\u89e3\u7684\u7c7b\u548c\u5b57\u6bb5\u3002\u5f53\u7528\u4e8e\u5b57\u6bb5\u65f6\uff0c\u521b\u5efamock\u7684\u5b9e\u4f8b\u4e5f\u4f1a\u88ab\u6ce8\u5165\u3002Mock bean\u6bcf\u6b21\u8c03\u7528\u5b8c\u6d4b\u8bd5\u65b9\u6cd5\u540e\u4f1a\u81ea\u52a8\u91cd\u7f6e\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," \u5982\u679c\u4f60\u7684\u6d4b\u8bd5\u4f7f\u7528\u4e86Spring Boot\u7684\u6d4b\u8bd5\u6ce8\u89e3\uff08\u6bd4\u5982",(0,i.kt)("inlineCode",{parentName:"p"},"@SpringBootTest"),"\uff09\uff0c\u8fd9\u4e2a\u7279\u6027\u4f1a\u88ab\u81ea\u52a8\u542f\u7528\u3002\u8981\u6362\u4e00\u79cd\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\u7684\u8bdd\uff0c\u9700\u8981\u660e\u786e\u5730\u6dfb\u52a0\u4e00\u4e2a\u76d1\u542c\u5668\u3002\u5982\u4e0b\u6240\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@TestExecutionListeners(MockitoTestExecutionListener.class)\n")),(0,i.kt)("p",null,"\u4e0b\u9762\u7684\u793a\u4f8b\u4f7f\u7528mock\u5b9e\u73b0\u66ff\u6362\u5b58\u5728\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"RemoteService")," bean\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import org.junit.*;\nimport org.junit.runner.*;\nimport org.springframework.beans.factory.annotation.*;\nimport org.springframework.boot.test.context.*;\nimport org.springframework.boot.test.mock.mockito.*;\nimport org.springframework.test.context.junit4.*;\n\nimport static org.assertj.core.api.Assertions.*;\nimport static org.mockito.BDDMockito.*;\n\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class MyTests {\n\n    @MockBean\n    private RemoteService remoteService;\n\n    @Autowired\n    private Reverser reverser;\n\n    @Test\n    public void exampleTest() {\n        // RemoteService has been injected into the reverser bean\n        given(this.remoteService.someCall()).willReturn("mock");\n        String reverse = reverser.reverseSomeCall();\n        assertThat(reverse).isEqualTo("kcom");\n    }\n\n}\n')),(0,i.kt)("p",null,"\u6b64\u5916\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@SpyBean"),"\uff0c\u6765\u7528Mockito",(0,i.kt)("inlineCode",{parentName:"p"},"spy"),"\u5305\u88c5\u4efb\u4f55\u5df2\u5b58\u5728\u7684bean\u3002\u5177\u4f53\u53c2\u8003",(0,i.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/2.0.0.RELEASE/api/org/springframework/boot/test/mock/mockito/SpyBean.html"},"Javadoc"),"\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," Spring\u7684\u6d4b\u8bd5\u6846\u67b6\u4f1a\u7f13\u5b58\u6d4b\u8bd5\u4e4b\u95f4\u5e94\u7528\u4e0a\u4e0b\u6587\uff0c\u5e76\u4e3a\u5171\u4eab\u76f8\u540c\u914d\u7f6e\u7684\u6d4b\u8bd5\u91cd\u7528\u4e0a\u4e0b\u6587\u3002\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@MockBean"),"\u6216\u8005",(0,i.kt)("inlineCode",{parentName:"p"},"@SpyBean"),"\u4f1a\u5f71\u54cd\u7f13\u5b58\u952e\uff0c\u5f88\u53ef\u80fd\u4f1a\u589e\u52a0\u4e0a\u4e0b\u6587\u7684\u6570\u91cf\u3002"))}g.isMDXComponent=!0}}]);