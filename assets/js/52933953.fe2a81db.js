"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[15989],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return f}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=t.createContext({}),p=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=p(e.components);return t.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=p(r),f=o,g=l["".concat(u,".").concat(f)]||l[f]||d[f]||a;return r?t.createElement(g,i(i({ref:n},s),{},{components:r})):t.createElement(g,i({ref:n},s))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=l;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"},8029:function(e,n,r){r.r(n),r.d(n,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var t=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],c={},u=void 0,p={unversionedId:"IV. Spring Boot features/29.5.1 Code Generation",id:"IV. Spring Boot features/29.5.1 Code Generation",title:"29.5.1 Code Generation",description:"29.5.1 \u4ee3\u7801\u751f\u6210",source:"@site/docs/IV. Spring Boot features/29.5.1 Code Generation.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/29.5.1 Code Generation",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/29.5.1 Code Generation",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/29.5.1 Code Generation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"29.5 Using jOOQ",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/29.5 Using jOOQ"},next:{title:"29.5.2 Using DSLContext",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/29.5.2 Using DSLContext"}},s={},d=[{value:"29.5.1 \u4ee3\u7801\u751f\u6210",id:"2951-\u4ee3\u7801\u751f\u6210",level:3}],l={toc:d};function f(e){var n=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"2951-\u4ee3\u7801\u751f\u6210"},"29.5.1 \u4ee3\u7801\u751f\u6210"),(0,a.kt)("p",null,"\u4e3a\u4e86\u4f7f\u7528jOOQ\u7c7b\u578b\u5b89\u5168\u7684\u67e5\u8be2\uff0c\u4f60\u9700\u8981\u4ece\u6570\u636e\u5e93schema\u751f\u6210Java\u7c7b\uff0c\u5177\u4f53\u53ef\u53c2\u8003",(0,a.kt)("a",{parentName:"p",href:"http://www.jooq.org/doc/3.6/manual-single-page/#jooq-in-7-steps-step3"},"jOOQ\u7528\u6237\u6307\u5357"),"\u3002\u5982\u679c\u6b63\u5728\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"jooq-codegen-maven"),"\u63d2\u4ef6\uff08\u4e5f\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"spring-boot-starter-parent")," \u201cparent POM\u201d\uff09\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u7684\u7701\u7565\u63d2\u4ef6\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"<version>"),"\u6807\u7b7e\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528Spring Boot\u5b9a\u4e49\u7684\u7248\u672c\u53d8\u91cf\uff08\u6bd4\u5982",(0,a.kt)("inlineCode",{parentName:"p"},"h2.version"),"\uff09\u6765\u58f0\u660e\u63d2\u4ef6\u7684\u6570\u636e\u5e93\u4f9d\u8d56\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<plugin>\n    <groupId>org.jooq</groupId>\n    <artifactId>jooq-codegen-maven</artifactId>\n    <executions>\n        ...\n    </executions>\n    <dependencies>\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n            <version>${h2.version}</version>\n        </dependency>\n    </dependencies>\n    <configuration>\n        <jdbc>\n            <driver>org.h2.Driver</driver>\n            <url>jdbc:h2:~/yourdatabase</url>\n        </jdbc>\n        <generator>\n            ...\n        </generator>\n    </configuration>\n</plugin>\n")))}f.isMDXComponent=!0}}]);