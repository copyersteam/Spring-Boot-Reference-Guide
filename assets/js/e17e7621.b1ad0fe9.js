"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[89149],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),f=s(t),g=o,m=f["".concat(c,".").concat(g)]||f[g]||l[g]||i;return t?r.createElement(m,a(a({ref:n},p),{},{components:t})):r.createElement(m,a({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},48113:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return l}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],u={},c=void 0,s={unversionedId:"IV. Spring Boot features/46.4 Testing your Auto-configuration",id:"IV. Spring Boot features/46.4 Testing your Auto-configuration",title:"46.4 Testing your Auto-configuration",description:"46.4 \u6d4b\u8bd5\u4f60\u7684\u81ea\u52a8\u914d\u7f6e",source:"@site/docs/IV. Spring Boot features/46.4 Testing your Auto-configuration.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/46.4 Testing your Auto-configuration",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/46.4 Testing your Auto-configuration",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/46.4 Testing your Auto-configuration.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"46.3.6 SpEL Expression Conditions",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/46.3.6 SpEL Expression Conditions"},next:{title:"46.4.1 Simulating a Web Context",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/46.4.1 Simulating a Web Context"}},p={},l=[{value:"46.4 \u6d4b\u8bd5\u4f60\u7684\u81ea\u52a8\u914d\u7f6e",id:"464-\u6d4b\u8bd5\u4f60\u7684\u81ea\u52a8\u914d\u7f6e",level:3}],f={toc:l};function g(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"464-\u6d4b\u8bd5\u4f60\u7684\u81ea\u52a8\u914d\u7f6e"},"46.4 \u6d4b\u8bd5\u4f60\u7684\u81ea\u52a8\u914d\u7f6e"),(0,i.kt)("p",null,"\u81ea\u52a8\u914d\u7f6e\u4f1a\u53d7\u5f88\u591a\u56e0\u7d20\u5f71\u54cd\uff1a\u7528\u6237\u914d\u7f6e\uff08",(0,i.kt)("inlineCode",{parentName:"p"},"@Bean"),"\u5b9a\u4e49\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"Environment"),"\u81ea\u5b9a\u4e49\uff09\u3001\u72b6\u51b5\u8bc4\u4f30\uff08\u5b58\u5728\u7279\u5b9a\u5e93\uff09\u7b49\u3002\u5177\u4f53\u5730\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u5e94\u5f53\u521b\u5efa\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"ApplicationContext"),"\u3002\u5b83\u4ee3\u8868\u4e86\u90a3\u4e9b\u81ea\u5b9a\u4e49\u7684\u7ed3\u5408\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"ApplicationContextRunner"),"\u63d0\u4f9b\u4e86\u8fbe\u6210\u8fd9\u79cd\u76ee\u6807\u7684\u597d\u529e\u6cd5\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ApplicationContextRunner"),"\u7ecf\u5e38\u4f1a\u5b9a\u4e49\u6210\u6d4b\u8bd5\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\uff0c\u7528\u6765\u6536\u96c6\u57fa\u7840\u7684\u3001\u666e\u904d\u7684\u914d\u7f6e\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u786e\u4fdd\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"UserServiceAutoConfiguration"),"\u603b\u662f\u4f1a\u88ab\u8c03\u7528\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"private final ApplicationContextRunner contextRunner = new ApplicationContextRunner()\n        .withConfiguration(AutoConfigurations.of(UserServiceAutoConfiguration.class));\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," \u5982\u679c\u4e0d\u5f97\u4e0d\u5b9a\u4e49\u591a\u4e2a\u81ea\u52a8\u914d\u7f6e\uff0c\u4e0d\u9700\u8981\u5bf9\u5b83\u4eec\u7684\u58f0\u660e\u6392\u5e8f\uff0c\u56e0\u4e3a\u4f1a\u548c\u5e94\u7528\u8fd0\u884c\u65f6\u5b8c\u5168\u76f8\u540c\u7684\u987a\u5e8f\u8c03\u7528\u5b83\u4eec\u3002"),(0,i.kt)("p",null,"\u6bcf\u4e2a\u6d4b\u8bd5\u53ef\u4ee5\u4f7f\u7528runner\u4ee3\u8868\u4e00\u4e2a\u7279\u6b8a\u7684\u4f7f\u7528\u6848\u4f8b\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u6837\u672c\u8c03\u7528\u4e86\u4e00\u4e2a\u7528\u6237\u914d\u7f6e\uff08",(0,i.kt)("inlineCode",{parentName:"p"},"UserConfiguration"),"\uff09\uff0c\u5e76\u4e14\u68c0\u67e5\u81ea\u52a8\u914d\u7f6e\u662f\u5426\u6ca1\u6709\u91c7\u7528\u3002\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"run"),"\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56de\u8c03\u4e0a\u4e0b\u6587\u3002\u5b83\u53ef\u4ee5\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"Assert4J"),"\u4e00\u8d77\u4f7f\u7528\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void defaultServiceBacksOff() {\n    this.contextRunner.withUserConfiguration(UserConfiguration.class)\n            .run((context) -> {\n                assertThat(context).hasSingleBean(UserService.class);\n                assertThat(context.getBean(UserService.class)).isSameAs(\n                        context.getBean(UserConfiguration.class).myUserService());\n            });\n}\n\n@Configuration\nstatic class UserConfiguration {\n\n    @Bean\n    public UserService myUserService() {\n        return new UserService("mine");\n    }\n\n}\n')),(0,i.kt)("p",null,"\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u81ea\u5b9a\u4e49",(0,i.kt)("inlineCode",{parentName:"p"},"Environment"),"\u3002\u5982\u4e0b\u6240\u793a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void serviceNameCanBeConfigured() {\n    this.contextRunner.withPropertyValues("user.name=test123").run((context) -> {\n        assertThat(context).hasSingleBean(UserService.class);\n        assertThat(context.getBean(UserService.class).getName()).isEqualTo("test123");\n    });\n}\n')))}g.isMDXComponent=!0}}]);