"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[25665],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(n),h=a,u=d["".concat(c,".").concat(h)]||d[h]||m[h]||s;return n?r.createElement(u,o(o({ref:t},p),{},{components:n})):r.createElement(u,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},35845:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return m}});var r=n(87462),a=n(63366),s=(n(67294),n(3905)),o=["components"],i={},c=void 0,l={unversionedId:"X. Appendices/A. Common application properties",id:"X. Appendices/A. Common application properties",title:"A. Common application properties",description:"\u9644\u5f55A. \u5e38\u89c1\u5e94\u7528\u5c5e\u6027",source:"@site/docs/X. Appendices/A. Common application properties.md",sourceDirName:"X. Appendices",slug:"/X. Appendices/A. Common application properties",permalink:"/Spring-Boot-Reference-Guide/docs/X. Appendices/A. Common application properties",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/X. Appendices/A. Common application properties.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"README",permalink:"/Spring-Boot-Reference-Guide/docs/X. Appendices/"},next:{title:"B. Configuration Metadata",permalink:"/Spring-Boot-Reference-Guide/docs/X. Appendices/B. Configuration Metadata"}},p={},m=[{value:"\u9644\u5f55A. \u5e38\u89c1\u5e94\u7528\u5c5e\u6027",id:"\u9644\u5f55a-\u5e38\u89c1\u5e94\u7528\u5c5e\u6027",level:3}],d={toc:m};function h(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"\u9644\u5f55a-\u5e38\u89c1\u5e94\u7528\u5c5e\u6027"},"\u9644\u5f55A. \u5e38\u89c1\u5e94\u7528\u5c5e\u6027"),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"application.properties/application.yml"),"\u6587\u4ef6\u5185\u90e8\u6216\u901a\u8fc7\u547d\u4ee4\u884c\u5f00\u5173\u6765\u6307\u5b9a\u5404\u79cd\u5c5e\u6027\u3002\u672c\u7ae0\u8282\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e38\u89c1Spring Boot\u5c5e\u6027\u7684\u5217\u8868\u53ca\u4f7f\u7528\u8fd9\u4e9b\u5c5e\u6027\u7684\u5e95\u5c42\u7c7b\u7684\u5f15\u7528\u3002"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\u6ce8")," \u5c5e\u6027\u53ef\u4ee5\u6765\u81eaclasspath\u4e0b\u7684\u5176\u4ed6jar\u6587\u4ef6\u4e2d\uff0c\u6240\u4ee5\u4f60\u4e0d\u5e94\u8be5\u628a\u5b83\u5f53\u6210\u8be6\u5c3d\u7684\u5217\u8868\u3002\u5b9a\u4e49\u4f60\u81ea\u5df1\u7684\u5c5e\u6027\u4e5f\u662f\u76f8\u5f53\u5408\u6cd5\u7684\u3002"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\u8b66\u544a\u26a0\ufe0f")," \u793a\u4f8b\u6587\u4ef6\u53ea\u662f\u4e00\u4e2a\u6307\u5bfc\u3002\u4e0d\u8981\u62f7\u8d1d/\u7c98\u8d34\u6574\u4e2a\u5185\u5bb9\u5230\u4f60\u7684\u5e94\u7528\uff0c\u800c\u662f\u53ea\u63d0\u53d6\u4f60\u9700\u8981\u7684\u5c5e\u6027\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-properties"},'# ===================================================================\n# COMMON SPRING BOOT PROPERTIES\n#\n# This sample file is provided as a guideline. Do NOT copy it in its\n# entirety to your own application.            ^^^\n# ===================================================================\n\n\n# ----------------------------------------\n# CORE PROPERTIES\n# ----------------------------------------\ndebug=false # Enable debug logs.\ntrace=false # Enable trace logs.\n\n# LOGGING\nlogging.config= # Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.\nlogging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.\nlogging.file= # Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.\nlogging.file.max-history=0 # Maximum of archive log files to keep. Only supported with the default logback setup.\nlogging.file.max-size=10MB # Maximum log file size. Only supported with the default logback setup.\nlogging.level.*= # Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`.\nlogging.path= # Location of the log file. For instance, `/var/log`.\nlogging.pattern.console= # Appender pattern for output to the console. Supported only with the default Logback setup.\nlogging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS # Appender pattern for log date format. Supported only with the default Logback setup.\nlogging.pattern.file= # Appender pattern for output to a file. Supported only with the default Logback setup.\nlogging.pattern.level=%5p # Appender pattern for log level. Supported only with the default Logback setup.\nlogging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.\n\n# AOP\nspring.aop.auto=true # Add @EnableAspectJAutoProxy.\nspring.aop.proxy-target-class=true # Whether subclass-based (CGLIB) proxies are to be created (true), as opposed to standard Java interface-based proxies (false).\n\n# IDENTITY (ContextIdApplicationContextInitializer)\nspring.application.name= # Application name.\n\n# ADMIN (SpringApplicationAdminJmxAutoConfiguration)\nspring.application.admin.enabled=false # Whether to enable admin features for the application.\nspring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean.\n\n# AUTO-CONFIGURATION\nspring.autoconfigure.exclude= # Auto-configuration classes to exclude.\n\n# BANNER\nspring.banner.charset=UTF-8 # Banner file encoding.\nspring.banner.location=classpath:banner.txt # Banner text resource location.\nspring.banner.image.location=classpath:banner.gif # Banner image file location (jpg or png can also be used).\nspring.banner.image.width=76 # Width of the banner image in chars.\nspring.banner.image.height= # Height of the banner image in chars (default based on image height).\nspring.banner.image.margin=2 # Left hand image margin in chars.\nspring.banner.image.invert=false # Whether images should be inverted for dark terminal themes.\n\n# SPRING CORE\nspring.beaninfo.ignore=true # Whether to skip search of BeanInfo classes.\n\n# SPRING CACHE (CacheProperties)\nspring.cache.cache-names= # Comma-separated list of cache names to create if supported by the underlying cache manager.\nspring.cache.caffeine.spec= # The spec to use to create caches. See CaffeineSpec for more details on the spec format.\nspring.cache.couchbase.expiration=0ms # Entry expiration. By default the entries never expire. Note that this value is ultimately converted to seconds.\nspring.cache.ehcache.config= # The location of the configuration file to use to initialize EhCache.\nspring.cache.infinispan.config= # The location of the configuration file to use to initialize Infinispan.\nspring.cache.jcache.config= # The location of the configuration file to use to initialize the cache manager.\nspring.cache.jcache.provider= # Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Needed only if more than one JSR-107 implementation is available on the classpath.\nspring.cache.redis.cache-null-values=true # Allow caching null values.\nspring.cache.redis.key-prefix= # Key prefix.\nspring.cache.redis.time-to-live=0ms # Entry expiration. By default the entries never expire.\nspring.cache.redis.use-key-prefix=true # Whether to use the key prefix when writing to Redis.\nspring.cache.type= # Cache type. By default, auto-detected according to the environment.\n\n# SPRING CONFIG - using environment property only (ConfigFileApplicationListener)\nspring.config.additional-location= # Config file locations used in addition to the defaults.\nspring.config.location= # Config file locations that replace the defaults.\nspring.config.name=application # Config file name.\n\n# HAZELCAST (HazelcastProperties)\nspring.hazelcast.config= # The location of the configuration file to use to initialize Hazelcast.\n\n# PROJECT INFORMATION (ProjectInfoProperties)\nspring.info.build.location=classpath:META-INF/build-info.properties # Location of the generated build-info.properties file.\nspring.info.git.location=classpath:git.properties # Location of the generated git.properties file.\n\n# JMX\nspring.jmx.default-domain= # JMX domain name.\nspring.jmx.enabled=true # Expose management beans to the JMX domain.\nspring.jmx.server=mbeanServer # MBeanServer bean name.\n\n# Email (MailProperties)\nspring.mail.default-encoding=UTF-8 # Default MimeMessage encoding.\nspring.mail.host= # SMTP server host. For instance, `smtp.example.com`.\nspring.mail.jndi-name= # Session JNDI name. When set, takes precedence over other mail settings.\nspring.mail.password= # Login password of the SMTP server.\nspring.mail.port= # SMTP server port.\nspring.mail.properties.*= # Additional JavaMail session properties.\nspring.mail.protocol=smtp # Protocol used by the SMTP server.\nspring.mail.test-connection=false # Whether to test that the mail server is available on startup.\nspring.mail.username= # Login user of the SMTP server.\n\n# APPLICATION SETTINGS (SpringApplication)\nspring.main.banner-mode=console # Mode used to display the banner when the application runs.\nspring.main.sources= # Sources (class names, package names, or XML resource locations) to include in the ApplicationContext.\nspring.main.web-application-type= # Flag to explicitly request a specific type of web application. If not set, auto-detected based on the classpath.\n\n# FILE ENCODING (FileEncodingApplicationListener)\nspring.mandatory-file-encoding= # Expected character encoding the application must use.\n\n# INTERNATIONALIZATION (MessageSourceProperties)\nspring.messages.always-use-message-format=false # Whether to always apply the MessageFormat rules, parsing even messages without arguments.\nspring.messages.basename=messages # Comma-separated list of basenames (essentially a fully-qualified classpath location), each following the ResourceBundle convention with relaxed support for slash based locations.\nspring.messages.cache-duration= # Loaded resource bundle files cache duration. When not set, bundles are cached forever. If a duration suffix is not specified, seconds will be used.\nspring.messages.encoding=UTF-8 # Message bundles encoding.\nspring.messages.fallback-to-system-locale=true # Whether to fall back to the system Locale if no files for a specific Locale have been found.\nspring.messages.use-code-as-default-message=false # Whether to use the message code as the default message instead of throwing a "NoSuchMessageException". Recommended during development only.\n\n# OUTPUT\nspring.output.ansi.enabled=detect # Configures the ANSI output.\n\n# PID FILE (ApplicationPidFileWriter)\nspring.pid.fail-on-write-error= # Fails if ApplicationPidFileWriter is used but it cannot write the PID file.\nspring.pid.file= # Location of the PID file to write (if ApplicationPidFileWriter is used).\n\n# PROFILES\nspring.profiles.active= # Comma-separated list of active profiles. Can be overridden by a command line switch.\nspring.profiles.include= # Unconditionally activate the specified comma-separated list of profiles (or list of profiles if using YAML).\n\n# QUARTZ SCHEDULER (QuartzProperties)\nspring.quartz.jdbc.initialize-schema=embedded # Database schema initialization mode.\nspring.quartz.jdbc.schema=classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\nspring.quartz.job-store-type=memory # Quartz job store type.\nspring.quartz.properties.*= # Additional Quartz Scheduler properties.\n\n# REACTOR (ReactorCoreProperties)\nspring.reactor.stacktrace-mode.enabled=false # Whether Reactor should collect stacktrace information at runtime.\n\n# SENDGRID (SendGridAutoConfiguration)\nspring.sendgrid.api-key= # SendGrid API key.\nspring.sendgrid.proxy.host= # SendGrid proxy host.\nspring.sendgrid.proxy.port= # SendGrid proxy port.\n\n\n# ----------------------------------------\n# WEB PROPERTIES\n# ----------------------------------------\n\n# EMBEDDED SERVER CONFIGURATION (ServerProperties)\nserver.address= # Network address to which the server should bind.\nserver.compression.enabled=false # Whether response compression is enabled.\nserver.compression.excluded-user-agents= # List of user-agents to exclude from compression.\nserver.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript # Comma-separated list of MIME types that should be compressed.\nserver.compression.min-response-size=2048 # Minimum "Content-Length" value that is required for compression to be performed.\nserver.connection-timeout= # Time that connectors wait for another HTTP request before closing the connection. When not set, the connector\'s container-specific default is used. Use a value of -1 to indicate no (that is, an infinite) timeout.\nserver.error.include-exception=false # Include the "exception" attribute.\nserver.error.include-stacktrace=never # When to include a "stacktrace" attribute.\nserver.error.path=/error # Path of the error controller.\nserver.error.whitelabel.enabled=true # Whether to enable the default error page displayed in browsers in case of a server error.\nserver.http2.enabled=false # Whether to enable HTTP/2 support, if the current environment supports it.\nserver.jetty.acceptors= # Number of acceptor threads to use.\nserver.jetty.accesslog.append=false # Append to log.\nserver.jetty.accesslog.date-format=dd/MMM/yyyy:HH:mm:ss Z # Timestamp format of the request log.\nserver.jetty.accesslog.enabled=false # Enable access log.\nserver.jetty.accesslog.extended-format=false # Enable extended NCSA format.\nserver.jetty.accesslog.file-date-format= # Date format to place in log file name.\nserver.jetty.accesslog.filename= # Log filename. If not specified, logs redirect to "System.err".\nserver.jetty.accesslog.locale= # Locale of the request log.\nserver.jetty.accesslog.log-cookies=false # Enable logging of the request cookies.\nserver.jetty.accesslog.log-latency=false # Enable logging of request processing time.\nserver.jetty.accesslog.log-server=false # Enable logging of the request hostname.\nserver.jetty.accesslog.retention-period=31 # Number of days before rotated log files are deleted.\nserver.jetty.accesslog.time-zone=GMT # Timezone of the request log.\nserver.jetty.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post or put content.\nserver.jetty.selectors= # Number of selector threads to use.\nserver.max-http-header-size=0 # Maximum size, in bytes, of the HTTP message header.\nserver.port=8080 # Server HTTP port.\nserver.server-header= # Value to use for the Server response header (if empty, no header is sent).\nserver.use-forward-headers= # Whether X-Forwarded-* headers should be applied to the HttpRequest.\nserver.servlet.context-parameters.*= # Servlet context init parameters.\nserver.servlet.context-path= # Context path of the application.\nserver.servlet.application-display-name=application # Display name of the application.\nserver.servlet.jsp.class-name=org.apache.jasper.servlet.JspServlet # The class name of the JSP servlet.\nserver.servlet.jsp.init-parameters.*= # Init parameters used to configure the JSP servlet.\nserver.servlet.jsp.registered=true # Whether the JSP servlet is registered.\nserver.servlet.path=/ # Path of the main dispatcher servlet.\nserver.servlet.session.cookie.comment= # Comment for the session cookie.\nserver.servlet.session.cookie.domain= # Domain for the session cookie.\nserver.servlet.session.cookie.http-only= # "HttpOnly" flag for the session cookie.\nserver.servlet.session.cookie.max-age= # Maximum age of the session cookie. If a duration suffix is not specified, seconds will be used.\nserver.servlet.session.cookie.name= # Session cookie name.\nserver.servlet.session.cookie.path= # Path of the session cookie.\nserver.servlet.session.cookie.secure= # "Secure" flag for the session cookie.\nserver.servlet.session.persistent=false # Whether to persist session data between restarts.\nserver.servlet.session.store-dir= # Directory used to store session data.\nserver.servlet.session.timeout= # Session timeout. If a duration suffix is not specified, seconds will be used.\nserver.servlet.session.tracking-modes= # Session tracking modes (one or more of the following: "cookie", "url", "ssl").\nserver.ssl.ciphers= # Supported SSL ciphers.\nserver.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store.\nserver.ssl.enabled= # Enable SSL support.\nserver.ssl.enabled-protocols= # Enabled SSL protocols.\nserver.ssl.key-alias= # Alias that identifies the key in the key store.\nserver.ssl.key-password= # Password used to access the key in the key store.\nserver.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).\nserver.ssl.key-store-password= # Password used to access the key store.\nserver.ssl.key-store-provider= # Provider for the key store.\nserver.ssl.key-store-type= # Type of the key store.\nserver.ssl.protocol=TLS # SSL protocol to use.\nserver.ssl.trust-store= # Trust store that holds SSL certificates.\nserver.ssl.trust-store-password= # Password used to access the trust store.\nserver.ssl.trust-store-provider= # Provider for the trust store.\nserver.ssl.trust-store-type= # Type of the trust store.\nserver.tomcat.accept-count=0 # Maximum queue length for incoming connection requests when all possible request processing threads are in use.\nserver.tomcat.accesslog.buffered=true # Whether to buffer output such that it is flushed only periodically.\nserver.tomcat.accesslog.directory=logs # Directory in which log files are created. Can be absolute or relative to the Tomcat base dir.\nserver.tomcat.accesslog.enabled=false # Enable access log.\nserver.tomcat.accesslog.file-date-format=.yyyy-MM-dd # Date format to place in the log file name.\nserver.tomcat.accesslog.pattern=common # Format pattern for access logs.\nserver.tomcat.accesslog.prefix=access_log # Log file name prefix.\nserver.tomcat.accesslog.rename-on-rotate=false # Whether to defer inclusion of the date stamp in the file name until rotate time.\nserver.tomcat.accesslog.request-attributes-enabled=false # Set request attributes for the IP address, Hostname, protocol, and port used for the request.\nserver.tomcat.accesslog.rotate=true # Whether to enable access log rotation.\nserver.tomcat.accesslog.suffix=.log # Log file name suffix.\nserver.tomcat.additional-tld-skip-patterns= # Comma-separated list of additional patterns that match jars to ignore for TLD scanning.\nserver.tomcat.background-processor-delay=30s # Delay between the invocation of backgroundProcess methods. If a duration suffix is not specified, seconds will be used.\nserver.tomcat.basedir= # Tomcat base directory. If not specified, a temporary directory is used.\nserver.tomcat.internal-proxies=10\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|\\\\\n        192\\\\.168\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|\\\\\n        169\\\\.254\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|\\\\\n        127\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|\\\\\n        172\\\\.1[6-9]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|\\\\\n        172\\\\.2[0-9]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|\\\\\n        172\\\\.3[0-1]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3} # Regular expression matching trusted IP addresses.\nserver.tomcat.max-connections=0 # Maximum number of connections that the server accepts and processes at any given time.\nserver.tomcat.max-http-header-size=0 # Maximum size, in bytes, of the HTTP message header.\nserver.tomcat.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post content.\nserver.tomcat.max-threads=0 # Maximum number of worker threads.\nserver.tomcat.min-spare-threads=0 # Minimum number of worker threads.\nserver.tomcat.port-header=X-Forwarded-Port # Name of the HTTP header used to override the original port value.\nserver.tomcat.protocol-header= # Header that holds the incoming protocol, usually named "X-Forwarded-Proto".\nserver.tomcat.protocol-header-https-value=https # Value of the protocol header indicating whether the incoming request uses SSL.\nserver.tomcat.redirect-context-root= # Whether requests to the context root should be redirected by appending a / to the path.\nserver.tomcat.remote-ip-header= # Name of the HTTP header from which the remote IP is extracted. For instance, `X-FORWARDED-FOR`.\nserver.tomcat.resource.cache-ttl= # Time-to-live of the static resource cache.\nserver.tomcat.uri-encoding=UTF-8 # Character encoding to use to decode the URI.\nserver.tomcat.use-relative-redirects= # Whether HTTP 1.1 and later location headers generated by a call to sendRedirect will use relative or absolute redirects.\nserver.undertow.accesslog.dir= # Undertow access log directory.\nserver.undertow.accesslog.enabled=false # Whether to enable the access log.\nserver.undertow.accesslog.pattern=common # Format pattern for access logs.\nserver.undertow.accesslog.prefix=access_log. # Log file name prefix.\nserver.undertow.accesslog.rotate=true # Whether to enable access log rotation.\nserver.undertow.accesslog.suffix=log # Log file name suffix.\nserver.undertow.buffer-size= # Size of each buffer, in bytes.\nserver.undertow.direct-buffers= # Whether to allocate buffers outside the Java heap.\nserver.undertow.io-threads= # Number of I/O threads to create for the worker.\nserver.undertow.eager-filter-init=true # Whether servlet filters should be initialized on startup.\nserver.undertow.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post content.\nserver.undertow.worker-threads= # Number of worker threads.\n\n# FREEMARKER (FreeMarkerProperties)\nspring.freemarker.allow-request-override=false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.\nspring.freemarker.allow-session-override=false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.\nspring.freemarker.cache=false # Whether to enable template caching.\nspring.freemarker.charset=UTF-8 # Template encoding.\nspring.freemarker.check-template-location=true # Whether to check that the templates location exists.\nspring.freemarker.content-type=text/html # Content-Type value.\nspring.freemarker.enabled=true # Whether to enable MVC view resolution for this technology.\nspring.freemarker.expose-request-attributes=false # Whether all request attributes should be added to the model prior to merging with the template.\nspring.freemarker.expose-session-attributes=false # Whether all HttpSession attributes should be added to the model prior to merging with the template.\nspring.freemarker.expose-spring-macro-helpers=true # Whether to expose a RequestContext for use by Spring\'s macro library, under the name "springMacroRequestContext".\nspring.freemarker.prefer-file-system-access=true # Whether to prefer file system access for template loading. File system access enables hot detection of template changes.\nspring.freemarker.prefix= # Prefix that gets prepended to view names when building a URL.\nspring.freemarker.request-context-attribute= # Name of the RequestContext attribute for all views.\nspring.freemarker.settings.*= # Well-known FreeMarker keys which are passed to FreeMarker\'s Configuration.\nspring.freemarker.suffix=.ftl # Suffix that gets appended to view names when building a URL.\nspring.freemarker.template-loader-path=classpath:/templates/ # Comma-separated list of template paths.\nspring.freemarker.view-names= # White list of view names that can be resolved.\n\n# GROOVY TEMPLATES (GroovyTemplateProperties)\nspring.groovy.template.allow-request-override=false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.\nspring.groovy.template.allow-session-override=false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.\nspring.groovy.template.cache=false # Whether to enable template caching.\nspring.groovy.template.charset=UTF-8 # Template encoding.\nspring.groovy.template.check-template-location=true # Whether to check that the templates location exists.\nspring.groovy.template.configuration.*= # See GroovyMarkupConfigurer\nspring.groovy.template.content-type=text/html # Content-Type value.\nspring.groovy.template.enabled=true # Whether to enable MVC view resolution for this technology.\nspring.groovy.template.expose-request-attributes=false # Whether all request attributes should be added to the model prior to merging with the template.\nspring.groovy.template.expose-session-attributes=false # Whether all HttpSession attributes should be added to the model prior to merging with the template.\nspring.groovy.template.expose-spring-macro-helpers=true # Whether to expose a RequestContext for use by Spring\'s macro library, under the name "springMacroRequestContext".\nspring.groovy.template.prefix= # Prefix that gets prepended to view names when building a URL.\nspring.groovy.template.request-context-attribute= # Name of the RequestContext attribute for all views.\nspring.groovy.template.resource-loader-path=classpath:/templates/ # Template path.\nspring.groovy.template.suffix=.tpl # Suffix that gets appended to view names when building a URL.\nspring.groovy.template.view-names= # White list of view names that can be resolved.\n\n# SPRING HATEOAS (HateoasProperties)\nspring.hateoas.use-hal-as-default-json-media-type=true # Whether application/hal+json responses should be sent to requests that accept application/json.\n\n# HTTP message conversion\nspring.http.converters.preferred-json-mapper= # Preferred JSON mapper to use for HTTP message conversion. By default, auto-detected according to the environment.\n\n# HTTP encoding (HttpEncodingProperties)\nspring.http.encoding.charset=UTF-8 # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.\nspring.http.encoding.enabled=true # Whether to enable http encoding support.\nspring.http.encoding.force= # Whether to force the encoding to the configured charset on HTTP requests and responses.\nspring.http.encoding.force-request= # Whether to force the encoding to the configured charset on HTTP requests. Defaults to true when "force" has not been specified.\nspring.http.encoding.force-response= # Whether to force the encoding to the configured charset on HTTP responses.\nspring.http.encoding.mapping= # Locale in which to encode mapping.\n\n# MULTIPART (MultipartProperties)\nspring.servlet.multipart.enabled=true # Whether to enable support of multipart uploads.\nspring.servlet.multipart.file-size-threshold=0 # Threshold after which files are written to disk. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.\nspring.servlet.multipart.location= # Intermediate location of uploaded files.\nspring.servlet.multipart.max-file-size=1MB # Max file size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.\nspring.servlet.multipart.max-request-size=10MB # Max request size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.\nspring.servlet.multipart.resolve-lazily=false # Whether to resolve the multipart request lazily at the time of file or parameter access.\n\n# JACKSON (JacksonProperties)\nspring.jackson.date-format= # Date format string or a fully-qualified date format class name. For instance, `yyyy-MM-dd HH:mm:ss`.\nspring.jackson.default-property-inclusion= # Controls the inclusion of properties during serialization. Configured with one of the values in Jackson\'s JsonInclude.Include enumeration.\nspring.jackson.deserialization.*= # Jackson on/off features that affect the way Java objects are deserialized.\nspring.jackson.generator.*= # Jackson on/off features for generators.\nspring.jackson.joda-date-time-format= # Joda date time format string. If not configured, "date-format" is used as a fallback if it is configured with a format string.\nspring.jackson.locale= # Locale used for formatting.\nspring.jackson.mapper.*= # Jackson general purpose on/off features.\nspring.jackson.parser.*= # Jackson on/off features for parsers.\nspring.jackson.property-naming-strategy= # One of the constants on Jackson\'s PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.\nspring.jackson.serialization.*= # Jackson on/off features that affect the way Java objects are serialized.\nspring.jackson.time-zone= #  Time zone used when formatting dates. For instance, "America/Los_Angeles" or "GMT+10".\n\n# GSON (GsonProperties)\nspring.gson.date-format= # Format to use when serializing Date objects.\nspring.gson.disable-html-escaping= # Whether to disable the escaping of HTML characters such as \'<\', \'>\', etc.\nspring.gson.disable-inner-class-serialization= # Whether to exclude inner classes during serialization.\nspring.gson.enable-complex-map-key-serialization= # Whether to enable serialization of complex map keys (i.e. non-primitives).\nspring.gson.exclude-fields-without-expose-annotation= # Whether to exclude all fields from consideration for serialization or deserialization that do not have the "Expose" annotation.\nspring.gson.field-naming-policy= # Naming policy that should be applied to an object\'s field during serialization and deserialization.\nspring.gson.generate-non-executable-json= # Whether to generate non executable JSON by prefixing the output with some special text.\nspring.gson.lenient= # Whether to be lenient about parsing JSON that doesn\'t conform to RFC 4627.\nspring.gson.long-serialization-policy= # Serialization policy for Long and long types.\nspring.gson.pretty-printing= # Whether to output serialized JSON that fits in a page for pretty printing.\nspring.gson.serialize-nulls= # Whether to serialize null fields.\n\n# JERSEY (JerseyProperties)\nspring.jersey.application-path= # Path that serves as the base URI for the application. If specified, overrides the value of "@ApplicationPath".\nspring.jersey.filter.order=0 # Jersey filter chain order.\nspring.jersey.init.*= # Init parameters to pass to Jersey through the servlet or filter.\nspring.jersey.servlet.load-on-startup=-1 # Load on startup priority of the Jersey servlet.\nspring.jersey.type=servlet # Jersey integration type.\n\n# SPRING LDAP (LdapProperties)\nspring.ldap.anonymous-read-only=false # Whether read-only operations should use an anonymous environment.\nspring.ldap.base= # Base suffix from which all operations should originate.\nspring.ldap.base-environment.*= # LDAP specification settings.\nspring.ldap.password= # Login password of the server.\nspring.ldap.urls= # LDAP URLs of the server.\nspring.ldap.username= # Login username of the server.\n\n# EMBEDDED LDAP (EmbeddedLdapProperties)\nspring.ldap.embedded.base-dn= # List of base DNs.\nspring.ldap.embedded.credential.username= # Embedded LDAP username.\nspring.ldap.embedded.credential.password= # Embedded LDAP password.\nspring.ldap.embedded.ldif=classpath:schema.ldif # Schema (LDIF) script resource reference.\nspring.ldap.embedded.port=0 # Embedded LDAP port.\nspring.ldap.embedded.validation.enabled=true # Whether to enable LDAP schema validation.\nspring.ldap.embedded.validation.schema= # Path to the custom schema.\n\n# MUSTACHE TEMPLATES (MustacheAutoConfiguration)\nspring.mustache.allow-request-override=false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.\nspring.mustache.allow-session-override=false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.\nspring.mustache.cache=false # Whether to enable template caching.\nspring.mustache.charset=UTF-8 # Template encoding.\nspring.mustache.check-template-location=true # Whether to check that the templates location exists.\nspring.mustache.content-type=text/html # Content-Type value.\nspring.mustache.enabled=true # Whether to enable MVC view resolution for this technology.\nspring.mustache.expose-request-attributes=false # Whether all request attributes should be added to the model prior to merging with the template.\nspring.mustache.expose-session-attributes=false # Whether all HttpSession attributes should be added to the model prior to merging with the template.\nspring.mustache.expose-spring-macro-helpers=true # Whether to expose a RequestContext for use by Spring\'s macro library, under the name "springMacroRequestContext".\nspring.mustache.prefix=classpath:/templates/ # Prefix to apply to template names.\nspring.mustache.request-context-attribute= # Name of the RequestContext attribute for all views.\nspring.mustache.suffix=.mustache # Suffix to apply to template names.\nspring.mustache.view-names= # White list of view names that can be resolved.\n\n# SPRING MVC (WebMvcProperties)\nspring.mvc.async.request-timeout= # Amount of time before asynchronous request handling times out.\nspring.mvc.contentnegotiation.favor-parameter=false # Whether a request parameter ("format" by default) should be used to determine the requested media type.\nspring.mvc.contentnegotiation.favor-path-extension=false # Whether the path extension in the URL path should be used to determine the requested media type.\nspring.mvc.contentnegotiation.media-types.*= # Map file extensions to media types for content negotiation. For instance, yml to text/yaml.\nspring.mvc.contentnegotiation.parameter-name= # Query parameter name to use when "favor-parameter" is enabled.\nspring.mvc.date-format= # Date format to use. For instance, `dd/MM/yyyy`.\nspring.mvc.dispatch-trace-request=false # Whether to dispatch TRACE requests to the FrameworkServlet doService method.\nspring.mvc.dispatch-options-request=true # Whether to dispatch OPTIONS requests to the FrameworkServlet doService method.\nspring.mvc.favicon.enabled=true # Whether to enable resolution of favicon.ico.\nspring.mvc.formcontent.putfilter.enabled=true # Whether to enable Spring\'s HttpPutFormContentFilter.\nspring.mvc.ignore-default-model-on-redirect=true # Whether the content of the "default" model should be ignored during redirect scenarios.\nspring.mvc.locale= # Locale to use. By default, this locale is overridden by the "Accept-Language" header.\nspring.mvc.locale-resolver=accept-header # Define how the locale should be resolved.\nspring.mvc.log-resolved-exception=false # Whether to enable warn logging of exceptions resolved by a "HandlerExceptionResolver".\nspring.mvc.message-codes-resolver-format= # Formatting strategy for message codes. For instance, `PREFIX_ERROR_CODE`.\nspring.mvc.pathmatch.use-registered-suffix-pattern=false # Whether suffix pattern matching should work only against extensions registered with "spring.mvc.contentnegotiation.media-types.*".\nspring.mvc.pathmatch.use-suffix-pattern=false # Whether to use suffix pattern match (".*") when matching patterns to requests.\nspring.mvc.servlet.load-on-startup=-1 # Load on startup priority of the dispatcher servlet.\nspring.mvc.static-path-pattern=/** # Path pattern used for static resources.\nspring.mvc.throw-exception-if-no-handler-found=false # Whether a "NoHandlerFoundException" should be thrown if no Handler was found to process a request.\nspring.mvc.view.prefix= # Spring MVC view prefix.\nspring.mvc.view.suffix= # Spring MVC view suffix.\n\n# SPRING RESOURCES HANDLING (ResourceProperties)\nspring.resources.add-mappings=true # Whether to enable default resource handling.\nspring.resources.cache.cachecontrol.cache-private= # Indicate that the response message is intended for a single user and must not be stored by a shared cache.\nspring.resources.cache.cachecontrol.cache-public= # Indicate that any cache may store the response.\nspring.resources.cache.cachecontrol.max-age= # Maximum time the response should be cached, in seconds if no duration suffix is not specified.\nspring.resources.cache.cachecontrol.must-revalidate= # Indicate that once it has become stale, a cache must not use the response without re-validating it with the server.\nspring.resources.cache.cachecontrol.no-cache= # Indicate that the cached response can be reused only if re-validated with the server.\nspring.resources.cache.cachecontrol.no-store= # Indicate to not cache the response in any case.\nspring.resources.cache.cachecontrol.no-transform= # Indicate intermediaries (caches and others) that they should not transform the response content.\nspring.resources.cache.cachecontrol.proxy-revalidate= # Same meaning as the "must-revalidate" directive, except that it does not apply to private caches.\nspring.resources.cache.cachecontrol.s-max-age= # Maximum time the response should be cached by shared caches, in seconds if no duration suffix is not specified.\nspring.resources.cache.cachecontrol.stale-if-error= # Maximum time the response may be used when errors are encountered, in seconds if no duration suffix is not specified.\nspring.resources.cache.cachecontrol.stale-while-revalidate= # Maximum time the response can be served after it becomes stale, in seconds if no duration suffix is not specified.\nspring.resources.cache.period= # Cache period for the resources served by the resource handler. If a duration suffix is not specified, seconds will be used.\nspring.resources.chain.cache=true # Whether to enable caching in the Resource chain.\nspring.resources.chain.enabled= # Whether to enable the Spring Resource Handling chain. By default, disabled unless at least one strategy has been enabled.\nspring.resources.chain.gzipped=false # Whether to enable resolution of already gzipped resources.\nspring.resources.chain.html-application-cache=false # Whether to enable HTML5 application cache manifest rewriting.\nspring.resources.chain.strategy.content.enabled=false # Whether to enable the content Version Strategy.\nspring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the content Version Strategy.\nspring.resources.chain.strategy.fixed.enabled=false # Whether to enable the fixed Version Strategy.\nspring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the fixed Version Strategy.\nspring.resources.chain.strategy.fixed.version= # Version string to use for the fixed Version Strategy.\nspring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.\n\n# SPRING SESSION (SessionProperties)\nspring.session.store-type= # Session store type.\nspring.session.servlet.filter-order=-2147483598 # Session repository filter order.\nspring.session.servlet.filter-dispatcher-types=async,error,request # Session repository filter dispatcher types.\n\n# SPRING SESSION HAZELCAST (HazelcastSessionProperties)\nspring.session.hazelcast.flush-mode=on-save # Sessions flush mode.\nspring.session.hazelcast.map-name=spring:session:sessions # Name of the map used to store sessions.\n\n# SPRING SESSION JDBC (JdbcSessionProperties)\nspring.session.jdbc.cleanup-cron=0 * * * * * # Cron expression for expired session cleanup job.\nspring.session.jdbc.initialize-schema=embedded # Database schema initialization mode.\nspring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\nspring.session.jdbc.table-name=SPRING_SESSION # Name of the database table used to store sessions.\n\n# SPRING SESSION MONGODB (MongoSessionProperties)\nspring.session.mongodb.collection-name=sessions # Collection name used to store sessions.\n\n# SPRING SESSION REDIS (RedisSessionProperties)\nspring.session.redis.cleanup-cron=0 * * * * * # Cron expression for expired session cleanup job.\nspring.session.redis.flush-mode=on-save # Sessions flush mode.\nspring.session.redis.namespace=spring:session # Namespace for keys used to store sessions.\n\n# THYMELEAF (ThymeleafAutoConfiguration)\nspring.thymeleaf.cache=true # Whether to enable template caching.\nspring.thymeleaf.check-template=true # Whether to check that the template exists before rendering it.\nspring.thymeleaf.check-template-location=true # Whether to check that the templates location exists.\nspring.thymeleaf.enabled=true # Whether to enable Thymeleaf view resolution for Web frameworks.\nspring.thymeleaf.enable-spring-el-compiler=false # Enable the SpringEL compiler in SpringEL expressions.\nspring.thymeleaf.encoding=UTF-8 # Template files encoding.\nspring.thymeleaf.excluded-view-names= # Comma-separated list of view names (patterns allowed) that should be excluded from resolution.\nspring.thymeleaf.mode=HTML # Template mode to be applied to templates. See also Thymeleaf\'s TemplateMode enum.\nspring.thymeleaf.prefix=classpath:/templates/ # Prefix that gets prepended to view names when building a URL.\nspring.thymeleaf.reactive.chunked-mode-view-names= # Comma-separated list of view names (patterns allowed) that should be the only ones executed in CHUNKED mode when a max chunk size is set.\nspring.thymeleaf.reactive.full-mode-view-names= # Comma-separated list of view names (patterns allowed) that should be executed in FULL mode even if a max chunk size is set.\nspring.thymeleaf.reactive.max-chunk-size=0 # Maximum size of data buffers used for writing to the response, in bytes.\nspring.thymeleaf.reactive.media-types= # Media types supported by the view technology.\nspring.thymeleaf.servlet.content-type=text/html # Content-Type value written to HTTP responses.\nspring.thymeleaf.suffix=.html # Suffix that gets appended to view names when building a URL.\nspring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.\nspring.thymeleaf.view-names= # Comma-separated list of view names (patterns allowed) that can be resolved.\n\n# SPRING WEBFLUX (WebFluxProperties)\nspring.webflux.date-format= # Date format to use. For instance, `dd/MM/yyyy`.\nspring.webflux.static-path-pattern=/** # Path pattern used for static resources.\n\n# SPRING WEB SERVICES (WebServicesProperties)\nspring.webservices.path=/services # Path that serves as the base URI for the services.\nspring.webservices.servlet.init= # Servlet init parameters to pass to Spring Web Services.\nspring.webservices.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.\nspring.webservices.wsdl-locations= # Comma-separated list of locations of WSDLs and accompanying XSDs to be exposed as beans.\n\n\n\n# ----------------------------------------\n# SECURITY PROPERTIES\n# ----------------------------------------\n# SECURITY (SecurityProperties)\nspring.security.filter.order=-100 # Security filter chain order.\nspring.security.filter.dispatcher-types=async,error,request # Security filter chain dispatcher types.\nspring.security.user.name=user # Default user name.\nspring.security.user.password= # Password for the default user name.\nspring.security.user.roles= # Granted roles for the default user name.\n\n# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)\nspring.security.oauth2.client.provider.*= # OAuth provider details.\nspring.security.oauth2.client.registration.*= # OAuth client registrations.\n\n# ----------------------------------------\n# DATA PROPERTIES\n# ----------------------------------------\n\n# FLYWAY (FlywayProperties)\nspring.flyway.baseline-description= #\nspring.flyway.baseline-on-migrate= #\nspring.flyway.baseline-version=1 # Version to start migration\nspring.flyway.check-location=true # Whether to check that migration scripts location exists.\nspring.flyway.clean-disabled= #\nspring.flyway.clean-on-validation-error= #\nspring.flyway.dry-run-output= #\nspring.flyway.enabled=true # Whether to enable flyway.\nspring.flyway.encoding= #\nspring.flyway.error-handlers= #\nspring.flyway.group= #\nspring.flyway.ignore-future-migrations= #\nspring.flyway.ignore-missing-migrations= #\nspring.flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.\nspring.flyway.installed-by= #\nspring.flyway.locations=classpath:db/migration # The locations of migrations scripts.\nspring.flyway.mixed= #\nspring.flyway.out-of-order= #\nspring.flyway.password= # JDBC password to use if you want Flyway to create its own DataSource.\nspring.flyway.placeholder-prefix= #\nspring.flyway.placeholder-replacement= #\nspring.flyway.placeholder-suffix= #\nspring.flyway.placeholders.*= #\nspring.flyway.repeatable-sql-migration-prefix= #\nspring.flyway.schemas= # schemas to update\nspring.flyway.skip-default-callbacks= #\nspring.flyway.skip-default-resolvers= #\nspring.flyway.sql-migration-prefix=V #\nspring.flyway.sql-migration-separator= #\nspring.flyway.sql-migration-suffix=.sql #\nspring.flyway.sql-migration-suffixes= #\nspring.flyway.table= #\nspring.flyway.target= #\nspring.flyway.undo-sql-migration-prefix= #\nspring.flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.\nspring.flyway.user= # Login user of the database to migrate.\nspring.flyway.validate-on-migrate= #\n\n# LIQUIBASE (LiquibaseProperties)\nspring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml # Change log configuration path.\nspring.liquibase.check-change-log-location=true # Whether to check that the change log location exists.\nspring.liquibase.contexts= # Comma-separated list of runtime contexts to use.\nspring.liquibase.default-schema= # Default database schema.\nspring.liquibase.drop-first=false # Whether to first drop the database schema.\nspring.liquibase.enabled=true # Whether to enable Liquibase support.\nspring.liquibase.labels= # Comma-separated list of runtime labels to use.\nspring.liquibase.parameters.*= # Change log parameters.\nspring.liquibase.password= # Login password of the database to migrate.\nspring.liquibase.rollback-file= # File to which rollback SQL is written when an update is performed.\nspring.liquibase.url= # JDBC URL of the database to migrate. If not set, the primary configured data source is used.\nspring.liquibase.user= # Login user of the database to migrate.\n\n# COUCHBASE (CouchbaseProperties)\nspring.couchbase.bootstrap-hosts= # Couchbase nodes (host or IP address) to bootstrap from.\nspring.couchbase.bucket.name=default # Name of the bucket to connect to.\nspring.couchbase.bucket.password=  # Password of the bucket.\nspring.couchbase.env.endpoints.key-value=1 # Number of sockets per node against the key/value service.\nspring.couchbase.env.endpoints.query=1 # Number of sockets per node against the query (N1QL) service.\nspring.couchbase.env.endpoints.view=1 # Number of sockets per node against the view service.\nspring.couchbase.env.ssl.enabled= # Whether to enable SSL support. Enabled automatically if a "keyStore" is provided unless specified otherwise.\nspring.couchbase.env.ssl.key-store= # Path to the JVM key store that holds the certificates.\nspring.couchbase.env.ssl.key-store-password= # Password used to access the key store.\nspring.couchbase.env.timeouts.connect=5000ms # Bucket connections timeouts.\nspring.couchbase.env.timeouts.key-value=2500ms # Blocking operations performed on a specific key timeout.\nspring.couchbase.env.timeouts.query=7500ms # N1QL query operations timeout.\nspring.couchbase.env.timeouts.socket-connect=1000ms # Socket connect connections timeout.\nspring.couchbase.env.timeouts.view=7500ms # Regular and geospatial view operations timeout.\n\n# DAO (PersistenceExceptionTranslationAutoConfiguration)\nspring.dao.exceptiontranslation.enabled=true # Whether to enable the PersistenceExceptionTranslationPostProcessor.\n\n# CASSANDRA (CassandraProperties)\nspring.data.cassandra.cluster-name= # Name of the Cassandra cluster.\nspring.data.cassandra.compression=none # Compression supported by the Cassandra binary protocol.\nspring.data.cassandra.connect-timeout= # Socket option: connection time out.\nspring.data.cassandra.consistency-level= # Queries consistency level.\nspring.data.cassandra.contact-points=localhost # Cluster node addresses.\nspring.data.cassandra.fetch-size= # Queries default fetch size.\nspring.data.cassandra.keyspace-name= # Keyspace name to use.\nspring.data.cassandra.load-balancing-policy= # Class name of the load balancing policy.\nspring.data.cassandra.port= # Port of the Cassandra server.\nspring.data.cassandra.password= # Login password of the server.\nspring.data.cassandra.pool.heartbeat-interval=30s # Heartbeat interval after which a message is sent on an idle connection to make sure it\'s still alive. If a duration suffix is not specified, seconds will be used.\nspring.data.cassandra.pool.idle-timeout=120s # Idle timeout before an idle connection is removed. If a duration suffix is not specified, seconds will be used.\nspring.data.cassandra.pool.max-queue-size=256 # Maximum number of requests that get queued if no connection is available.\nspring.data.cassandra.pool.pool-timeout=5000ms # Pool timeout when trying to acquire a connection from a host\'s pool.\nspring.data.cassandra.read-timeout= # Socket option: read time out.\nspring.data.cassandra.reconnection-policy= # Reconnection policy class.\nspring.data.cassandra.repositories.type=auto # Type of Cassandra repositories to enable.\nspring.data.cassandra.retry-policy= # Class name of the retry policy.\nspring.data.cassandra.serial-consistency-level= # Queries serial consistency level.\nspring.data.cassandra.schema-action=none # Schema action to take at startup.\nspring.data.cassandra.ssl=false # Enable SSL support.\nspring.data.cassandra.username= # Login user of the server.\n\n# DATA COUCHBASE (CouchbaseDataProperties)\nspring.data.couchbase.auto-index=false # Automatically create views and indexes.\nspring.data.couchbase.consistency=read-your-own-writes # Consistency to apply by default on generated queries.\nspring.data.couchbase.repositories.type=auto # Type of Couchbase repositories to enable.\n\n# ELASTICSEARCH (ElasticsearchProperties)\nspring.data.elasticsearch.cluster-name=elasticsearch # Elasticsearch cluster name.\nspring.data.elasticsearch.cluster-nodes= # Comma-separated list of cluster node addresses.\nspring.data.elasticsearch.properties.*= # Additional properties used to configure the client.\nspring.data.elasticsearch.repositories.enabled=true # Whether to enable Elasticsearch repositories.\n\n# DATA LDAP\nspring.data.ldap.repositories.enabled=true # Whether to enable LDAP repositories.\n\n# MONGODB (MongoProperties)\nspring.data.mongodb.authentication-database= # Authentication database name.\nspring.data.mongodb.database= # Database name.\nspring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.\nspring.data.mongodb.grid-fs-database= # GridFS database name.\nspring.data.mongodb.host= # Mongo server host. Cannot be set with URI.\nspring.data.mongodb.password= # Login password of the mongo server. Cannot be set with URI.\nspring.data.mongodb.port= # Mongo server port. Cannot be set with URI.\nspring.data.mongodb.repositories.type=auto # Type of Mongo repositories to enable.\nspring.data.mongodb.uri=mongodb://localhost/test # Mongo database URI. Cannot be set with host, port and credentials.\nspring.data.mongodb.username= # Login user of the mongo server. Cannot be set with URI.\n\n# DATA REDIS\nspring.data.redis.repositories.enabled=true # Whether to enable Redis repositories.\n\n# NEO4J (Neo4jProperties)\nspring.data.neo4j.auto-index=none # Auto index mode.\nspring.data.neo4j.embedded.enabled=true # Whether to enable embedded mode if the embedded driver is available.\nspring.data.neo4j.open-in-view=true # Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the entire processing of the request.\nspring.data.neo4j.password= # Login password of the server.\nspring.data.neo4j.repositories.enabled=true # Whether to enable Neo4j repositories.\nspring.data.neo4j.uri= # URI used by the driver. Auto-detected by default.\nspring.data.neo4j.username= # Login user of the server.\n\n# DATA REST (RepositoryRestProperties)\nspring.data.rest.base-path= # Base path to be used by Spring Data REST to expose repository resources.\nspring.data.rest.default-media-type= # Content type to use as a default when none is specified.\nspring.data.rest.default-page-size= # Default size of pages.\nspring.data.rest.detection-strategy=default # Strategy to use to determine which repositories get exposed.\nspring.data.rest.enable-enum-translation= # Whether to enable enum value translation through the Spring Data REST default resource bundle.\nspring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.\nspring.data.rest.max-page-size= # Maximum size of pages.\nspring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.\nspring.data.rest.return-body-on-create= # Whether to return a response body after creating an entity.\nspring.data.rest.return-body-on-update= # Whether to return a response body after updating an entity.\nspring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.\n\n# SOLR (SolrProperties)\nspring.data.solr.host=http://127.0.0.1:8983/solr # Solr host. Ignored if "zk-host" is set.\nspring.data.solr.repositories.enabled=true # Whether to enable Solr repositories.\nspring.data.solr.zk-host= # ZooKeeper host address in the form HOST:PORT.\n\n# DATA WEB (SpringDataWebProperties)\nspring.data.web.pageable.default-page-size=20 # Default page size.\nspring.data.web.pageable.max-page-size=2000 # Maximum page size to be accepted.\nspring.data.web.pageable.one-indexed-parameters=false # Whether to expose and assume 1-based page number indexes.\nspring.data.web.pageable.page-parameter=page # Page index parameter name.\nspring.data.web.pageable.prefix= # General prefix to be prepended to the page number and page size parameters.\nspring.data.web.pageable.qualifier-delimiter=_ # Delimiter to be used between the qualifier and the actual page number and size properties.\nspring.data.web.pageable.size-parameter=size # Page size parameter name.\nspring.data.web.sort.sort-parameter=sort # Sort parameter name.\n\n# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)\nspring.datasource.continue-on-error=false # Whether to stop if an error occurs while initializing the database.\nspring.datasource.data= # Data (DML) script resource references.\nspring.datasource.data-username= # Username of the database to execute DML scripts (if different).\nspring.datasource.data-password= # Password of the database to execute DML scripts (if different).\nspring.datasource.dbcp2.*= # Commons DBCP2 specific settings\nspring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.\nspring.datasource.generate-unique-name=false # Whether to generate a random datasource name.\nspring.datasource.hikari.*= # Hikari specific settings\nspring.datasource.initialization-mode=embedded # Initialize the datasource with available DDL and DML scripts.\nspring.datasource.jmx-enabled=false # Whether to enable JMX support (if provided by the underlying pool).\nspring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.\nspring.datasource.name= # Name of the datasource. Default to "testdb" when using an embedded database.\nspring.datasource.password= # Login password of the database.\nspring.datasource.platform=all # Platform to use in the DDL or DML scripts (such as schema-${platform}.sql or data-${platform}.sql).\nspring.datasource.schema= # Schema (DDL) script resource references.\nspring.datasource.schema-username= # Username of the database to execute DDL scripts (if different).\nspring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).\nspring.datasource.separator=; # Statement separator in SQL initialization scripts.\nspring.datasource.sql-script-encoding= # SQL scripts encoding.\nspring.datasource.tomcat.*= # Tomcat datasource specific settings\nspring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.\nspring.datasource.url= # JDBC URL of the database.\nspring.datasource.username= # Login username of the database.\nspring.datasource.xa.data-source-class-name= # XA datasource fully qualified name.\nspring.datasource.xa.properties= # Properties to pass to the XA data source.\n\n# JEST (Elasticsearch HTTP client) (JestProperties)\nspring.elasticsearch.jest.connection-timeout=3s # Connection timeout.\nspring.elasticsearch.jest.multi-threaded=true # Whether to enable connection requests from multiple execution threads.\nspring.elasticsearch.jest.password= # Login password.\nspring.elasticsearch.jest.proxy.host= # Proxy host the HTTP client should use.\nspring.elasticsearch.jest.proxy.port= # Proxy port the HTTP client should use.\nspring.elasticsearch.jest.read-timeout=3s # Read timeout.\nspring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use.\nspring.elasticsearch.jest.username= # Login username.\n\n# H2 Web Console (H2ConsoleProperties)\nspring.h2.console.enabled=false # Whether to enable the console.\nspring.h2.console.path=/h2-console # Path at which the console is available.\nspring.h2.console.settings.trace=false # Whether to enable trace output.\nspring.h2.console.settings.web-allow-others=false # Whether to enable remote access.\n\n# InfluxDB (InfluxDbProperties)\nspring.influx.password= # Login password.\nspring.influx.url= # URL of the InfluxDB instance to which to connect.\nspring.influx.user= # Login user.\n\n# JOOQ (JooqProperties)\nspring.jooq.sql-dialect= # SQL dialect to use. Auto-detected by default.\n\n# JDBC (JdbcProperties)\nspring.jdbc.template.fetch-size=-1 # Number of rows that should be fetched from the database when more rows are needed.\nspring.jdbc.template.max-rows=-1 # Maximum number of rows.\nspring.jdbc.template.query-timeout= # Query timeout. Default is to use the JDBC driver\'s default configuration. If a duration suffix is not specified, seconds will be used.\n\n# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)\nspring.data.jpa.repositories.enabled=true # Whether to enable JPA repositories.\nspring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.\nspring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.\nspring.jpa.generate-ddl=false # Whether to initialize the schema on startup.\nspring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".\nspring.jpa.hibernate.naming.implicit-strategy= # Fully qualified name of the implicit naming strategy.\nspring.jpa.hibernate.naming.physical-strategy= # Fully qualified name of the physical naming strategy.\nspring.jpa.hibernate.use-new-id-generator-mappings= # Whether to use Hibernate\'s newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.\nspring.jpa.mapping-resources= # Mapping resources (equivalent to "mapping-file" entries in persistence.xml).\nspring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.\nspring.jpa.properties.*= # Additional native properties to set on the JPA provider.\nspring.jpa.show-sql=false # Whether to enable logging of SQL statements.\n\n# JTA (JtaAutoConfiguration)\nspring.jta.enabled=true # Whether to enable JTA support.\nspring.jta.log-dir= # Transaction logs directory.\nspring.jta.transaction-manager-id= # Transaction manager unique identifier.\n\n# ATOMIKOS (AtomikosProperties)\nspring.jta.atomikos.connectionfactory.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.\nspring.jta.atomikos.connectionfactory.ignore-session-transacted-flag=true # Whether to ignore the transacted flag when creating session.\nspring.jta.atomikos.connectionfactory.local-transaction-mode=false # Whether local transactions are desired.\nspring.jta.atomikos.connectionfactory.maintenance-interval=60 # The time, in seconds, between runs of the pool\'s maintenance thread.\nspring.jta.atomikos.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.\nspring.jta.atomikos.connectionfactory.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.\nspring.jta.atomikos.connectionfactory.max-pool-size=1 # The maximum size of the pool.\nspring.jta.atomikos.connectionfactory.min-pool-size=1 # The minimum size of the pool.\nspring.jta.atomikos.connectionfactory.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.\nspring.jta.atomikos.connectionfactory.unique-resource-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.\nspring.jta.atomikos.connectionfactory.xa-connection-factory-class-name= # Vendor-specific implementation of XAConnectionFactory.\nspring.jta.atomikos.connectionfactory.xa-properties= # Vendor-specific XA properties.\nspring.jta.atomikos.datasource.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.\nspring.jta.atomikos.datasource.concurrent-connection-validation= # Whether to use concurrent connection validation.\nspring.jta.atomikos.datasource.default-isolation-level= # Default isolation level of connections provided by the pool.\nspring.jta.atomikos.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.\nspring.jta.atomikos.datasource.maintenance-interval=60 # The time, in seconds, between runs of the pool\'s maintenance thread.\nspring.jta.atomikos.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.\nspring.jta.atomikos.datasource.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.\nspring.jta.atomikos.datasource.max-pool-size=1 # The maximum size of the pool.\nspring.jta.atomikos.datasource.min-pool-size=1 # The minimum size of the pool.\nspring.jta.atomikos.datasource.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.\nspring.jta.atomikos.datasource.test-query= # SQL query or statement used to validate a connection before returning it.\nspring.jta.atomikos.datasource.unique-resource-name=dataSource # The unique name used to identify the resource during recovery.\nspring.jta.atomikos.datasource.xa-data-source-class-name= # Vendor-specific implementation of XAConnectionFactory.\nspring.jta.atomikos.datasource.xa-properties= # Vendor-specific XA properties.\nspring.jta.atomikos.properties.allow-sub-transactions=true # Specify whether sub-transactions are allowed.\nspring.jta.atomikos.properties.checkpoint-interval=500 # Interval between checkpoints, expressed as the number of log writes between two checkpoint.\nspring.jta.atomikos.properties.default-jta-timeout=10000ms # Default timeout for JTA transactions.\nspring.jta.atomikos.properties.default-max-wait-time-on-shutdown=9223372036854775807 # How long should normal shutdown (no-force) wait for transactions to complete.\nspring.jta.atomikos.properties.enable-logging=true # Whether to enable disk logging.\nspring.jta.atomikos.properties.force-shutdown-on-vm-exit=false # Whether a VM shutdown should trigger forced shutdown of the transaction core.\nspring.jta.atomikos.properties.log-base-dir= # Directory in which the log files should be stored.\nspring.jta.atomikos.properties.log-base-name=tmlog # Transactions log file base name.\nspring.jta.atomikos.properties.max-actives=50 # Maximum number of active transactions.\nspring.jta.atomikos.properties.max-timeout=300000ms # Maximum timeout that can be allowed for transactions.\nspring.jta.atomikos.properties.recovery.delay=10000ms # Delay between two recovery scans.\nspring.jta.atomikos.properties.recovery.forget-orphaned-log-entries-delay=86400000ms # Delay after which recovery can cleanup pending (\'orphaned\') log entries.\nspring.jta.atomikos.properties.recovery.max-retries=5 # Number of retry attempts to commit the transaction before throwing an exception.\nspring.jta.atomikos.properties.recovery.retry-interval=10000ms # Delay between retry attempts.\nspring.jta.atomikos.properties.serial-jta-transactions=true # Whether sub-transactions should be joined when possible.\nspring.jta.atomikos.properties.service= # Transaction manager implementation that should be started.\nspring.jta.atomikos.properties.threaded-two-phase-commit=false # Whether to use different (and concurrent) threads for two-phase commit on the participating resources.\nspring.jta.atomikos.properties.transaction-manager-unique-name= # The transaction manager\'s unique name.\n\n# BITRONIX\nspring.jta.bitronix.connectionfactory.acquire-increment=1 # Number of connections to create when growing the pool.\nspring.jta.bitronix.connectionfactory.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.\nspring.jta.bitronix.connectionfactory.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.\nspring.jta.bitronix.connectionfactory.allow-local-transactions=true # Whether the transaction manager should allow mixing XA and non-XA transactions.\nspring.jta.bitronix.connectionfactory.apply-transaction-timeout=false # Whether the transaction timeout should be set on the XAResource when it is enlisted.\nspring.jta.bitronix.connectionfactory.automatic-enlisting-enabled=true # Whether resources should be enlisted and delisted automatically.\nspring.jta.bitronix.connectionfactory.cache-producers-consumers=true # Whether producers and consumers should be cached.\nspring.jta.bitronix.connectionfactory.class-name= # Underlying implementation class name of the XA resource.\nspring.jta.bitronix.connectionfactory.defer-connection-release=true # Whether the provider can run many transactions on the same connection and supports transaction interleaving.\nspring.jta.bitronix.connectionfactory.disabled= # Whether this resource is disabled, meaning it\'s temporarily forbidden to acquire a connection from its pool.\nspring.jta.bitronix.connectionfactory.driver-properties= # Properties that should be set on the underlying implementation.\nspring.jta.bitronix.connectionfactory.failed= # Mark this resource producer as failed.\nspring.jta.bitronix.connectionfactory.ignore-recovery-failures=false # Whether recovery failures should be ignored.\nspring.jta.bitronix.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.\nspring.jta.bitronix.connectionfactory.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.\nspring.jta.bitronix.connectionfactory.min-pool-size=0 # The minimum size of the pool.\nspring.jta.bitronix.connectionfactory.password= # The password to use to connect to the JMS provider.\nspring.jta.bitronix.connectionfactory.share-transaction-connections=false #  Whether connections in the ACCESSIBLE state can be shared within the context of a transaction.\nspring.jta.bitronix.connectionfactory.test-connections=true # Whether connections should be tested when acquired from the pool.\nspring.jta.bitronix.connectionfactory.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).\nspring.jta.bitronix.connectionfactory.unique-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.\nspring.jta.bitronix.connectionfactory.use-tm-join=true # Whether TMJOIN should be used when starting XAResources.\nspring.jta.bitronix.connectionfactory.user= # The user to use to connect to the JMS provider.\nspring.jta.bitronix.datasource.acquire-increment=1 # Number of connections to create when growing the pool.\nspring.jta.bitronix.datasource.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.\nspring.jta.bitronix.datasource.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.\nspring.jta.bitronix.datasource.allow-local-transactions=true # Whether the transaction manager should allow mixing XA and non-XA transactions.\nspring.jta.bitronix.datasource.apply-transaction-timeout=false # Whether the transaction timeout should be set on the XAResource when it is enlisted.\nspring.jta.bitronix.datasource.automatic-enlisting-enabled=true # Whether resources should be enlisted and delisted automatically.\nspring.jta.bitronix.datasource.class-name= # Underlying implementation class name of the XA resource.\nspring.jta.bitronix.datasource.cursor-holdability= # The default cursor holdability for connections.\nspring.jta.bitronix.datasource.defer-connection-release=true # Whether the database can run many transactions on the same connection and supports transaction interleaving.\nspring.jta.bitronix.datasource.disabled= # Whether this resource is disabled, meaning it\'s temporarily forbidden to acquire a connection from its pool.\nspring.jta.bitronix.datasource.driver-properties= # Properties that should be set on the underlying implementation.\nspring.jta.bitronix.datasource.enable-jdbc4-connection-test= # Whether Connection.isValid() is called when acquiring a connection from the pool.\nspring.jta.bitronix.datasource.failed= # Mark this resource producer as failed.\nspring.jta.bitronix.datasource.ignore-recovery-failures=false # Whether recovery failures should be ignored.\nspring.jta.bitronix.datasource.isolation-level= # The default isolation level for connections.\nspring.jta.bitronix.datasource.local-auto-commit= # The default auto-commit mode for local transactions.\nspring.jta.bitronix.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.\nspring.jta.bitronix.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.\nspring.jta.bitronix.datasource.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.\nspring.jta.bitronix.datasource.min-pool-size=0 # The minimum size of the pool.\nspring.jta.bitronix.datasource.prepared-statement-cache-size=0 # The target size of the prepared statement cache. 0 disables the cache.\nspring.jta.bitronix.datasource.share-transaction-connections=false #  Whether connections in the ACCESSIBLE state can be shared within the context of a transaction.\nspring.jta.bitronix.datasource.test-query= # SQL query or statement used to validate a connection before returning it.\nspring.jta.bitronix.datasource.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, and always last is Integer.MAX_VALUE).\nspring.jta.bitronix.datasource.unique-name=dataSource # The unique name used to identify the resource during recovery.\nspring.jta.bitronix.datasource.use-tm-join=true # Whether TMJOIN should be used when starting XAResources.\nspring.jta.bitronix.properties.allow-multiple-lrc=false # Whether to allow multiple LRC resources to be enlisted into the same transaction.\nspring.jta.bitronix.properties.asynchronous2-pc=false # Whether to enable asynchronously execution of two phase commit.\nspring.jta.bitronix.properties.background-recovery-interval-seconds=60 # Interval in seconds at which to run the recovery process in the background.\nspring.jta.bitronix.properties.current-node-only-recovery=true # Whether to recover only the current node.\nspring.jta.bitronix.properties.debug-zero-resource-transaction=false # Whether to log the creation and commit call stacks of transactions executed without a single enlisted resource.\nspring.jta.bitronix.properties.default-transaction-timeout=60 # Default transaction timeout, in seconds.\nspring.jta.bitronix.properties.disable-jmx=false # Whether to enable JMX support.\nspring.jta.bitronix.properties.exception-analyzer= # Set the fully qualified name of the exception analyzer implementation to use.\nspring.jta.bitronix.properties.filter-log-status=false # Whether to enable filtering of logs so that only mandatory logs are written.\nspring.jta.bitronix.properties.force-batching-enabled=true #  Whether disk forces are batched.\nspring.jta.bitronix.properties.forced-write-enabled=true # Whether logs are forced to disk.\nspring.jta.bitronix.properties.graceful-shutdown-interval=60 # Maximum amount of seconds the TM waits for transactions to get done before aborting them at shutdown time.\nspring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name= # JNDI name of the TransactionSynchronizationRegistry.\nspring.jta.bitronix.properties.jndi-user-transaction-name= # JNDI name of the UserTransaction.\nspring.jta.bitronix.properties.journal=disk # Name of the journal. Can be \'disk\', \'null\', or a class name.\nspring.jta.bitronix.properties.log-part1-filename=btm1.tlog # Name of the first fragment of the journal.\nspring.jta.bitronix.properties.log-part2-filename=btm2.tlog # Name of the second fragment of the journal.\nspring.jta.bitronix.properties.max-log-size-in-mb=2 # Maximum size in megabytes of the journal fragments.\nspring.jta.bitronix.properties.resource-configuration-filename= # ResourceLoader configuration file name.\nspring.jta.bitronix.properties.server-id= # ASCII ID that must uniquely identify this TM instance. Defaults to the machine\'s IP address.\nspring.jta.bitronix.properties.skip-corrupted-logs=false # Skip corrupted transactions log entries.\nspring.jta.bitronix.properties.warn-about-zero-resource-transaction=true # Whether to log a warning for transactions executed without a single enlisted resource.\n\n# NARAYANA (NarayanaProperties)\nspring.jta.narayana.default-timeout=60s # Transaction timeout. If a duration suffix is not specified, seconds will be used.\nspring.jta.narayana.expiry-scanners=com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner # Comma-separated list of expiry scanners.\nspring.jta.narayana.log-dir= # Transaction object store directory.\nspring.jta.narayana.one-phase-commit=true # Whether to enable one phase commit optimization.\nspring.jta.narayana.periodic-recovery-period=120s # Interval in which periodic recovery scans are performed. If a duration suffix is not specified, seconds will be used.\nspring.jta.narayana.recovery-backoff-period=10s # Back off period between first and second phases of the recovery scan. If a duration suffix is not specified, seconds will be used.\nspring.jta.narayana.recovery-db-pass= # Database password to be used by the recovery manager.\nspring.jta.narayana.recovery-db-user= # Database username to be used by the recovery manager.\nspring.jta.narayana.recovery-jms-pass= # JMS password to be used by the recovery manager.\nspring.jta.narayana.recovery-jms-user= # JMS username to be used by the recovery manager.\nspring.jta.narayana.recovery-modules= # Comma-separated list of recovery modules.\nspring.jta.narayana.transaction-manager-id=1 # Unique transaction manager id.\nspring.jta.narayana.xa-resource-orphan-filters= # Comma-separated list of orphan filters.\n\n# EMBEDDED MONGODB (EmbeddedMongoProperties)\nspring.mongodb.embedded.features=sync_delay # Comma-separated list of features to enable.\nspring.mongodb.embedded.storage.database-dir= # Directory used for data storage.\nspring.mongodb.embedded.storage.oplog-size= # Maximum size of the oplog, in megabytes.\nspring.mongodb.embedded.storage.repl-set-name= # Name of the replica set.\nspring.mongodb.embedded.version=3.2.2 # Version of Mongo to use.\n\n# REDIS (RedisProperties)\nspring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.\nspring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.\nspring.redis.database=0 # Database index used by the connection factory.\nspring.redis.url= # Connection URL. Overrides host, port, and password. User is ignored. Example: redis://user:password@example.com:6379\nspring.redis.host=localhost # Redis server host.\nspring.redis.jedis.pool.max-active=8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.\nspring.redis.jedis.pool.max-idle=8 # Maximum number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.\nspring.redis.jedis.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.\nspring.redis.jedis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.\nspring.redis.lettuce.pool.max-active=8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.\nspring.redis.lettuce.pool.max-idle=8 # Maximum number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.\nspring.redis.lettuce.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.\nspring.redis.lettuce.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.\nspring.redis.lettuce.shutdown-timeout=100ms # Shutdown timeout.\nspring.redis.password= # Login password of the redis server.\nspring.redis.port=6379 # Redis server port.\nspring.redis.sentinel.master= # Name of the Redis server.\nspring.redis.sentinel.nodes= # Comma-separated list of "host:port" pairs.\nspring.redis.ssl=false # Whether to enable SSL support.\nspring.redis.timeout= # Connection timeout.\n\n# TRANSACTION (TransactionProperties)\nspring.transaction.default-timeout= # Default transaction timeout. If a duration suffix is not specified, seconds will be used.\nspring.transaction.rollback-on-commit-failure= # Whether to roll back on commit failures.\n\n\n\n# ----------------------------------------\n# INTEGRATION PROPERTIES\n# ----------------------------------------\n\n# ACTIVEMQ (ActiveMQProperties)\nspring.activemq.broker-url= # URL of the ActiveMQ broker. Auto-generated by default.\nspring.activemq.close-timeout=15s # Time to wait before considering a close complete.\nspring.activemq.in-memory=true # Whether the default broker URL should be in memory. Ignored if an explicit broker has been specified.\nspring.activemq.non-blocking-redelivery=false # Whether to stop message delivery before re-delivering messages from a rolled back transaction. This implies that message order is not preserved when this is enabled.\nspring.activemq.password= # Login password of the broker.\nspring.activemq.send-timeout=0ms # Time to wait on message sends for a response. Set it to 0 to wait forever.\nspring.activemq.user= # Login user of the broker.\nspring.activemq.packages.trust-all= # Whether to trust all packages.\nspring.activemq.packages.trusted= # Comma-separated list of specific packages to trust (when not trusting all packages).\nspring.activemq.pool.block-if-full=true # Whether to block when a connection is requested and the pool is full. Set it to false to throw a "JMSException" instead.\nspring.activemq.pool.block-if-full-timeout=-1ms # Blocking period before throwing an exception if the pool is still full.\nspring.activemq.pool.create-connection-on-startup=true # Whether to create a connection on startup. Can be used to warm up the pool on startup.\nspring.activemq.pool.enabled=false # Whether a PooledConnectionFactory should be created, instead of a regular ConnectionFactory.\nspring.activemq.pool.expiry-timeout=0ms # Connection expiration timeout.\nspring.activemq.pool.idle-timeout=30s # Connection idle timeout.\nspring.activemq.pool.max-connections=1 # Maximum number of pooled connections.\nspring.activemq.pool.maximum-active-session-per-connection=500 # Maximum number of active sessions per connection.\nspring.activemq.pool.reconnect-on-exception=true # Reset the connection when a "JMSException" occurs.\nspring.activemq.pool.time-between-expiration-check=-1ms # Time to sleep between runs of the idle connection eviction thread. When negative, no idle connection eviction thread runs.\nspring.activemq.pool.use-anonymous-producers=true # Whether to use only one anonymous "MessageProducer" instance. Set it to false to create one "MessageProducer" every time one is required.\n\n# ARTEMIS (ArtemisProperties)\nspring.artemis.embedded.cluster-password= # Cluster password. Randomly generated on startup by default.\nspring.artemis.embedded.data-directory= # Journal file directory. Not necessary if persistence is turned off.\nspring.artemis.embedded.enabled=true # Whether to enable embedded mode if the Artemis server APIs are available.\nspring.artemis.embedded.persistent=false # Whether to enable persistent store.\nspring.artemis.embedded.queues= # Comma-separated list of queues to create on startup.\nspring.artemis.embedded.server-id= # Server ID. By default, an auto-incremented counter is used.\nspring.artemis.embedded.topics= # Comma-separated list of topics to create on startup.\nspring.artemis.host=localhost # Artemis broker host.\nspring.artemis.mode= # Artemis deployment mode, auto-detected by default.\nspring.artemis.password= # Login password of the broker.\nspring.artemis.port=61616 # Artemis broker port.\nspring.artemis.user= # Login user of the broker.\n\n# SPRING BATCH (BatchProperties)\nspring.batch.initialize-schema=embedded # Database schema initialization mode.\nspring.batch.job.enabled=true # Execute all Spring Batch jobs in the context on startup.\nspring.batch.job.names= # Comma-separated list of job names to execute on startup (for instance, `job1,job2`). By default, all Jobs found in the context are executed.\nspring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\nspring.batch.table-prefix= # Table prefix for all the batch meta-data tables.\n\n# SPRING INTEGRATION (IntegrationProperties)\nspring.integration.jdbc.initialize-schema=embedded # Database schema initialization mode.\nspring.integration.jdbc.schema=classpath:org/springframework/integration/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\n\n# JMS (JmsProperties)\nspring.jms.jndi-name= # Connection factory JNDI name. When set, takes precedence to others connection factory auto-configurations.\nspring.jms.listener.acknowledge-mode= # Acknowledge mode of the container. By default, the listener is transacted with automatic acknowledgment.\nspring.jms.listener.auto-startup=true # Start the container automatically on startup.\nspring.jms.listener.concurrency= # Minimum number of concurrent consumers.\nspring.jms.listener.max-concurrency= # Maximum number of concurrent consumers.\nspring.jms.pub-sub-domain=false # Whether the default destination type is topic.\nspring.jms.template.default-destination= # Default destination to use on send and receive operations that do not have a destination parameter.\nspring.jms.template.delivery-delay= # Delivery delay to use for send calls.\nspring.jms.template.delivery-mode= # Delivery mode. Enables QoS (Quality of Service) when set.\nspring.jms.template.priority= # Priority of a message when sending. Enables QoS (Quality of Service) when set.\nspring.jms.template.qos-enabled= # Whether to enable explicit QoS (Quality of Service) when sending a message.\nspring.jms.template.receive-timeout= # Timeout to use for receive calls.\nspring.jms.template.time-to-live= # Time-to-live of a message when sending. Enables QoS (Quality of Service) when set.\n\n# APACHE KAFKA (KafkaProperties)\nspring.kafka.admin.client-id= # ID to pass to the server when making requests. Used for server-side logging.\nspring.kafka.admin.fail-fast=false # Whether to fail fast if the broker is not available on startup.\nspring.kafka.admin.properties.*= # Additional admin-specific properties used to configure the client.\nspring.kafka.admin.ssl.key-password= # Password of the private key in the key store file.\nspring.kafka.admin.ssl.keystore-location= # Location of the key store file.\nspring.kafka.admin.ssl.keystore-password= # Store password for the key store file.\nspring.kafka.admin.ssl.truststore-location= # Location of the trust store file.\nspring.kafka.admin.ssl.truststore-password= # Store password for the trust store file.\nspring.kafka.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.\nspring.kafka.client-id= # ID to pass to the server when making requests. Used for server-side logging.\nspring.kafka.consumer.auto-commit-interval= # Frequency with which the consumer offsets are auto-committed to Kafka if \'enable.auto.commit\' is set to true.\nspring.kafka.consumer.auto-offset-reset= # What to do when there is no initial offset in Kafka or if the current offset no longer exists on the server.\nspring.kafka.consumer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.\nspring.kafka.consumer.client-id= # ID to pass to the server when making requests. Used for server-side logging.\nspring.kafka.consumer.enable-auto-commit= # Whether the consumer\'s offset is periodically committed in the background.\nspring.kafka.consumer.fetch-max-wait= # Maximum amount of time the server blocks before answering the fetch request if there isn\'t sufficient data to immediately satisfy the requirement given by "fetch.min.bytes".\nspring.kafka.consumer.fetch-min-size= # Minimum amount of data, in bytes, the server should return for a fetch request.\nspring.kafka.consumer.group-id= # Unique string that identifies the consumer group to which this consumer belongs.\nspring.kafka.consumer.heartbeat-interval= # Expected time between heartbeats to the consumer coordinator.\nspring.kafka.consumer.key-deserializer= # Deserializer class for keys.\nspring.kafka.consumer.max-poll-records= # Maximum number of records returned in a single call to poll().\nspring.kafka.consumer.properties.*= # Additional consumer-specific properties used to configure the client.\nspring.kafka.consumer.ssl.key-password= # Password of the private key in the key store file.\nspring.kafka.consumer.ssl.keystore-location= # Location of the key store file.\nspring.kafka.consumer.ssl.keystore-password= # Store password for the key store file.\nspring.kafka.consumer.ssl.truststore-location= # Location of the trust store file.\nspring.kafka.consumer.ssl.truststore-password= # Store password for the trust store file.\nspring.kafka.consumer.value-deserializer= # Deserializer class for values.\nspring.kafka.jaas.control-flag=required # Control flag for login configuration.\nspring.kafka.jaas.enabled=false # Whether to enable JAAS configuration.\nspring.kafka.jaas.login-module=com.sun.security.auth.module.Krb5LoginModule # Login module.\nspring.kafka.jaas.options= # Additional JAAS options.\nspring.kafka.listener.ack-count= # Number of records between offset commits when ackMode is "COUNT" or "COUNT_TIME".\nspring.kafka.listener.ack-mode= # Listener AckMode. See the spring-kafka documentation.\nspring.kafka.listener.ack-time= # Time between offset commits when ackMode is "TIME" or "COUNT_TIME".\nspring.kafka.listener.client-id= # Prefix for the listener\'s consumer client.id property.\nspring.kafka.listener.concurrency= # Number of threads to run in the listener containers.\nspring.kafka.listener.idle-event-interval= # Time between publishing idle consumer events (no data received).\nspring.kafka.listener.log-container-config= # Whether to log the container configuration during initialization (INFO level).\nspring.kafka.listener.monitor-interval= # Time between checks for non-responsive consumers. If a duration suffix is not specified, seconds will be used.\nspring.kafka.listener.no-poll-threshold= # Multiplier applied to "pollTimeout" to determine if a consumer is non-responsive.\nspring.kafka.listener.poll-timeout= # Timeout to use when polling the consumer.\nspring.kafka.listener.type=single # Listener type.\nspring.kafka.producer.acks= # Number of acknowledgments the producer requires the leader to have received before considering a request complete.\nspring.kafka.producer.batch-size= # Number of records to batch before sending.\nspring.kafka.producer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.\nspring.kafka.producer.buffer-memory= # Total bytes of memory the producer can use to buffer records waiting to be sent to the server.\nspring.kafka.producer.client-id= # ID to pass to the server when making requests. Used for server-side logging.\nspring.kafka.producer.compression-type= # Compression type for all data generated by the producer.\nspring.kafka.producer.key-serializer= # Serializer class for keys.\nspring.kafka.producer.properties.*= # Additional producer-specific properties used to configure the client.\nspring.kafka.producer.retries= # When greater than zero, enables retrying of failed sends.\nspring.kafka.producer.ssl.key-password= # Password of the private key in the key store file.\nspring.kafka.producer.ssl.keystore-location= # Location of the key store file.\nspring.kafka.producer.ssl.keystore-password= # Store password for the key store file.\nspring.kafka.producer.ssl.truststore-location= # Location of the trust store file.\nspring.kafka.producer.ssl.truststore-password= # Store password for the trust store file.\nspring.kafka.producer.transaction-id-prefix= # When non empty, enables transaction support for producer.\nspring.kafka.producer.value-serializer= # Serializer class for values.\nspring.kafka.properties.*= # Additional properties, common to producers and consumers, used to configure the client.\nspring.kafka.ssl.key-password= # Password of the private key in the key store file.\nspring.kafka.ssl.keystore-location= # Location of the key store file.\nspring.kafka.ssl.keystore-password= # Store password for the key store file.\nspring.kafka.ssl.truststore-location= # Location of the trust store file.\nspring.kafka.ssl.truststore-password= # Store password for the trust store file.\nspring.kafka.template.default-topic= # Default topic to which messages are sent.\n\n# RABBIT (RabbitProperties)\nspring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.\nspring.rabbitmq.cache.channel.checkout-timeout= # Duration to wait to obtain a channel if the cache size has been reached.\nspring.rabbitmq.cache.channel.size= # Number of channels to retain in the cache.\nspring.rabbitmq.cache.connection.mode=channel # Connection factory cache mode.\nspring.rabbitmq.cache.connection.size= # Number of connections to cache.\nspring.rabbitmq.connection-timeout= # Connection timeout. Set it to zero to wait forever.\nspring.rabbitmq.dynamic=true # Whether to create an AmqpAdmin bean.\nspring.rabbitmq.host=localhost # RabbitMQ host.\nspring.rabbitmq.listener.direct.acknowledge-mode= # Acknowledge mode of container.\nspring.rabbitmq.listener.direct.auto-startup=true # Whether to start the container automatically on startup.\nspring.rabbitmq.listener.direct.consumers-per-queue= # Number of consumers per queue.\nspring.rabbitmq.listener.direct.default-requeue-rejected= # Whether rejected deliveries are re-queued by default.\nspring.rabbitmq.listener.direct.idle-event-interval= # How often idle container events should be published.\nspring.rabbitmq.listener.direct.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).\nspring.rabbitmq.listener.direct.retry.enabled=false # Whether publishing retries are enabled.\nspring.rabbitmq.listener.direct.retry.initial-interval=1000ms # Duration between the first and second attempt to deliver a message.\nspring.rabbitmq.listener.direct.retry.max-attempts=3 # Maximum number of attempts to deliver a message.\nspring.rabbitmq.listener.direct.retry.max-interval=10000ms # Maximum duration between attempts.\nspring.rabbitmq.listener.direct.retry.multiplier=1 # Multiplier to apply to the previous retry interval.\nspring.rabbitmq.listener.direct.retry.stateless=true # Whether retries are stateless or stateful.\nspring.rabbitmq.listener.simple.acknowledge-mode= # Acknowledge mode of container.\nspring.rabbitmq.listener.simple.auto-startup=true # Whether to start the container automatically on startup.\nspring.rabbitmq.listener.simple.concurrency= # Minimum number of listener invoker threads.\nspring.rabbitmq.listener.simple.default-requeue-rejected= # Whether rejected deliveries are re-queued by default.\nspring.rabbitmq.listener.simple.idle-event-interval= # How often idle container events should be published.\nspring.rabbitmq.listener.simple.max-concurrency= # Maximum number of listener invoker threads.\nspring.rabbitmq.listener.simple.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).\nspring.rabbitmq.listener.simple.retry.enabled=false # Whether publishing retries are enabled.\nspring.rabbitmq.listener.simple.retry.initial-interval=1000ms # Duration between the first and second attempt to deliver a message.\nspring.rabbitmq.listener.simple.retry.max-attempts=3 # Maximum number of attempts to deliver a message.\nspring.rabbitmq.listener.simple.retry.max-interval=10000ms #  Maximum duration between attempts.\nspring.rabbitmq.listener.simple.retry.multiplier=1 # Multiplier to apply to the previous retry interval.\nspring.rabbitmq.listener.simple.retry.stateless=true # Whether retries are stateless or stateful.\nspring.rabbitmq.listener.simple.transaction-size= # Number of messages to be processed in a transaction. That is, the number of messages between acks. For best results, it should be less than or equal to the prefetch count.\nspring.rabbitmq.listener.type=simple # Listener container type.\nspring.rabbitmq.password=guest # Login to authenticate against the broker.\nspring.rabbitmq.port=5672 # RabbitMQ port.\nspring.rabbitmq.publisher-confirms=false # Whether to enable publisher confirms.\nspring.rabbitmq.publisher-returns=false # Whether to enable publisher returns.\nspring.rabbitmq.requested-heartbeat= # Requested heartbeat timeout; zero for none. If a duration suffix is not specified, seconds will be used.\nspring.rabbitmq.ssl.enabled=false # Whether to enable SSL support.\nspring.rabbitmq.ssl.key-store= # Path to the key store that holds the SSL certificate.\nspring.rabbitmq.ssl.key-store-password= # Password used to access the key store.\nspring.rabbitmq.ssl.key-store-type=PKCS12 # Key store type.\nspring.rabbitmq.ssl.trust-store= # Trust store that holds SSL certificates.\nspring.rabbitmq.ssl.trust-store-password= # Password used to access the trust store.\nspring.rabbitmq.ssl.trust-store-type=JKS # Trust store type.\nspring.rabbitmq.ssl.algorithm= # SSL algorithm to use. By default, configured by the Rabbit client library.\nspring.rabbitmq.template.exchange= # Name of the default exchange to use for send operations.\nspring.rabbitmq.template.mandatory= # Whether to enable mandatory messages.\nspring.rabbitmq.template.receive-timeout= # Timeout for `receive()` operations.\nspring.rabbitmq.template.reply-timeout= # Timeout for `sendAndReceive()` operations.\nspring.rabbitmq.template.retry.enabled=false # Whether publishing retries are enabled.\nspring.rabbitmq.template.retry.initial-interval=1000ms # Duration between the first and second attempt to deliver a message.\nspring.rabbitmq.template.retry.max-attempts=3 # Maximum number of attempts to deliver a message.\nspring.rabbitmq.template.retry.max-interval=10000ms # Maximum duration between attempts.\nspring.rabbitmq.template.retry.multiplier=1 # Multiplier to apply to the previous retry interval.\nspring.rabbitmq.template.routing-key= # Value of a default routing key to use for send operations.\nspring.rabbitmq.username=guest # Login user to authenticate to the broker.\nspring.rabbitmq.virtual-host= # Virtual host to use when connecting to the broker.\n\n\n# ----------------------------------------\n# ACTUATOR PROPERTIES\n# ----------------------------------------\n\n# MANAGEMENT HTTP SERVER (ManagementServerProperties)\nmanagement.server.add-application-context-header=false # Add the "X-Application-Context" HTTP header in each response.\nmanagement.server.address= # Network address to which the management endpoints should bind. Requires a custom management.server.port.\nmanagement.server.port= # Management endpoint HTTP port (uses the same port as the application by default). Configure a different port to use management-specific SSL.\nmanagement.server.servlet.context-path= # Management endpoint context-path (for instance, `/management`). Requires a custom management.server.port.\nmanagement.server.ssl.ciphers= # Supported SSL ciphers. Requires a custom management.port.\nmanagement.server.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store. Requires a custom management.server.port.\nmanagement.server.ssl.enabled= # Whether to enable SSL support. Requires a custom management.server.port.\nmanagement.server.ssl.enabled-protocols= # Enabled SSL protocols. Requires a custom management.server.port.\nmanagement.server.ssl.key-alias= # Alias that identifies the key in the key store. Requires a custom management.server.port.\nmanagement.server.ssl.key-password= # Password used to access the key in the key store. Requires a custom management.server.port.\nmanagement.server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file). Requires a custom management.server.port.\nmanagement.server.ssl.key-store-password= # Password used to access the key store. Requires a custom management.server.port.\nmanagement.server.ssl.key-store-provider= # Provider for the key store. Requires a custom management.server.port.\nmanagement.server.ssl.key-store-type= # Type of the key store. Requires a custom management.server.port.\nmanagement.server.ssl.protocol=TLS # SSL protocol to use. Requires a custom management.server.port.\nmanagement.server.ssl.trust-store= # Trust store that holds SSL certificates. Requires a custom management.server.port.\nmanagement.server.ssl.trust-store-password= # Password used to access the trust store. Requires a custom management.server.port.\nmanagement.server.ssl.trust-store-provider= # Provider for the trust store. Requires a custom management.server.port.\nmanagement.server.ssl.trust-store-type= # Type of the trust store. Requires a custom management.server.port.\n\n# CLOUDFOUNDRY\nmanagement.cloudfoundry.enabled=true # Whether to enable extended Cloud Foundry actuator endpoints.\nmanagement.cloudfoundry.skip-ssl-validation=false # Whether to skip SSL verification for Cloud Foundry actuator endpoint security calls.\n\n# ENDPOINTS GENERAL CONFIGURATION\nmanagement.endpoints.enabled-by-default= # Whether to enable or disable all endpoints by default.\n\n# ENDPOINTS JMX CONFIGURATION (JmxEndpointProperties)\nmanagement.endpoints.jmx.domain=org.springframework.boot # Endpoints JMX domain name. Fallback to \'spring.jmx.default-domain\' if set.\nmanagement.endpoints.jmx.exposure.include=* # Endpoint IDs that should be included or \'*\' for all.\nmanagement.endpoints.jmx.exposure.exclude= # Endpoint IDs that should be excluded.\nmanagement.endpoints.jmx.static-names= # Additional static properties to append to all ObjectNames of MBeans representing Endpoints.\nmanagement.endpoints.jmx.unique-names=false # Whether to ensure that ObjectNames are modified in case of conflict.\n\n# ENDPOINTS WEB CONFIGURATION (WebEndpointProperties)\nmanagement.endpoints.web.exposure.include=health,info # Endpoint IDs that should be included or \'*\' for all.\nmanagement.endpoints.web.exposure.exclude= # Endpoint IDs that should be excluded.\nmanagement.endpoints.web.base-path=/actuator # Base path for Web endpoints. Relative to server.servlet.context-path or management.server.servlet.context-path if management.server.port is configured.\nmanagement.endpoints.web.path-mapping= # Mapping between endpoint IDs and the path that should expose them.\n\n# ENDPOINTS CORS CONFIGURATION (CorsEndpointProperties)\nmanagement.endpoints.web.cors.allow-credentials= # Whether credentials are supported. When not set, credentials are not supported.\nmanagement.endpoints.web.cors.allowed-headers= # Comma-separated list of headers to allow in a request. \'*\' allows all headers.\nmanagement.endpoints.web.cors.allowed-methods= # Comma-separated list of methods to allow. \'*\' allows all methods. When not set, defaults to GET.\nmanagement.endpoints.web.cors.allowed-origins= # Comma-separated list of origins to allow. \'*\' allows all origins. When not set, CORS support is disabled.\nmanagement.endpoints.web.cors.exposed-headers= # Comma-separated list of headers to include in a response.\nmanagement.endpoints.web.cors.max-age=1800s # How long the response from a pre-flight request can be cached by clients. If a duration suffix is not specified, seconds will be used.\n\n# AUDIT EVENTS ENDPOINT (AuditEventsEndpoint)\nmanagement.endpoint.auditevents.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.auditevents.enabled=true # Whether to enable the auditevents endpoint.\n\n# BEANS ENDPOINT (BeansEndpoint)\nmanagement.endpoint.beans.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.beans.enabled=true # Whether to enable the beans endpoint.\n\n# CONDITIONS REPORT ENDPOINT (ConditionsReportEndpoint)\nmanagement.endpoint.conditions.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.conditions.enabled=true # Whether to enable the conditions endpoint.\n\n# CONFIGURATION PROPERTIES REPORT ENDPOINT (ConfigurationPropertiesReportEndpoint, ConfigurationPropertiesReportEndpointProperties)\nmanagement.endpoint.configprops.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.configprops.enabled=true # Whether to enable the configprops endpoint.\nmanagement.endpoint.configprops.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions.\n\n# ENVIRONMENT ENDPOINT (EnvironmentEndpoint, EnvironmentEndpointProperties)\nmanagement.endpoint.env.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.env.enabled=true # Whether to enable the env endpoint.\nmanagement.endpoint.env.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions.\n\n# FLYWAY ENDPOINT (FlywayEndpoint)\nmanagement.endpoint.flyway.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.flyway.enabled=true # Whether to enable the flyway endpoint.\n\n# HEALTH ENDPOINT (HealthEndpoint, HealthEndpointProperties)\nmanagement.endpoint.health.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.health.enabled=true # Whether to enable the health endpoint.\nmanagement.endpoint.health.roles= # Roles used to determine whether or not a user is authorized to be shown details. When empty, all authenticated users are authorized.\nmanagement.endpoint.health.show-details=never # When to show full health details.\n\n# HEAP DUMP ENDPOINT (HeapDumpWebEndpoint)\nmanagement.endpoint.heapdump.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.heapdump.enabled=true # Whether to enable the heapdump endpoint.\n\n# HTTP TRACE ENDPOINT (HttpTraceEndpoint)\nmanagement.endpoint.httptrace.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.httptrace.enabled=true # Whether to enable the httptrace endpoint.\n\n# INFO ENDPOINT (InfoEndpoint)\ninfo= # Arbitrary properties to add to the info endpoint.\nmanagement.endpoint.info.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.info.enabled=true # Whether to enable the info endpoint.\n\n# JOLOKIA ENDPOINT (JolokiaProperties)\nmanagement.endpoint.jolokia.config.*= # Jolokia settings. Refer to the documentation of Jolokia for more details.\nmanagement.endpoint.jolokia.enabled=true # Whether to enable the jolokia endpoint.\n\n# LIQUIBASE ENDPOINT (LiquibaseEndpoint)\nmanagement.endpoint.liquibase.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.liquibase.enabled=true # Whether to enable the liquibase endpoint.\n\n# LOG FILE ENDPOINT (LogFileWebEndpoint, LogFileWebEndpointProperties)\nmanagement.endpoint.logfile.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.logfile.enabled=true # Whether to enable the logfile endpoint.\nmanagement.endpoint.logfile.external-file= # External Logfile to be accessed. Can be used if the logfile is written by output redirect and not by the logging system itself.\n\n# LOGGERS ENDPOINT (LoggersEndpoint)\nmanagement.endpoint.loggers.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.loggers.enabled=true # Whether to enable the loggers endpoint.\n\n# REQUEST MAPPING ENDPOINT  (MappingsEndpoint)\nmanagement.endpoint.mappings.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.mappings.enabled=true # Whether to enable the mappings endpoint.\n\n# METRICS ENDPOINT (MetricsEndpoint)\nmanagement.endpoint.metrics.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.metrics.enabled=true # Whether to enable the metrics endpoint.\n\n# PROMETHEUS ENDPOINT (PrometheusScrapeEndpoint)\nmanagement.endpoint.prometheus.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.prometheus.enabled=true # Whether to enable the prometheus endpoint.\n\n# SCHEDULED TASKS ENDPOINT (ScheduledTasksEndpoint)\nmanagement.endpoint.scheduledtasks.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.scheduledtasks.enabled=true # Whether to enable the scheduledtasks endpoint.\n\n# SESSIONS ENDPOINT (SessionsEndpoint)\nmanagement.endpoint.sessions.enabled=true # Whether to enable the sessions endpoint.\n\n# SHUTDOWN ENDPOINT (ShutdownEndpoint)\nmanagement.endpoint.shutdown.enabled=false # Whether to enable the shutdown endpoint.\n\n# THREAD DUMP ENDPOINT (ThreadDumpEndpoint)\nmanagement.endpoint.threaddump.cache.time-to-live=0ms # Maximum time that a response can be cached.\nmanagement.endpoint.threaddump.enabled=true # Whether to enable the threaddump endpoint.\n\n# HEALTH INDICATORS\nmanagement.health.db.enabled=true # Whether to enable database health check.\nmanagement.health.cassandra.enabled=true # Whether to enable Cassandra health check.\nmanagement.health.couchbase.enabled=true # Whether to enable Couchbase health check.\nmanagement.health.defaults.enabled=true # Whether to enable default health indicators.\nmanagement.health.diskspace.enabled=true # Whether to enable disk space health check.\nmanagement.health.diskspace.path= # Path used to compute the available disk space.\nmanagement.health.diskspace.threshold=0 # Minimum disk space, in bytes, that should be available.\nmanagement.health.elasticsearch.enabled=true # Whether to enable Elasticsearch health check.\nmanagement.health.elasticsearch.indices= # Comma-separated index names.\nmanagement.health.elasticsearch.response-timeout=100ms # Time to wait for a response from the cluster.\nmanagement.health.influxdb.enabled=true # Whether to enable InfluxDB health check.\nmanagement.health.jms.enabled=true # Whether to enable JMS health check.\nmanagement.health.ldap.enabled=true # Whether to enable LDAP health check.\nmanagement.health.mail.enabled=true # Whether to enable Mail health check.\nmanagement.health.mongo.enabled=true # Whether to enable MongoDB health check.\nmanagement.health.neo4j.enabled=true # Whether to enable Neo4j health check.\nmanagement.health.rabbit.enabled=true # Whether to enable RabbitMQ health check.\nmanagement.health.redis.enabled=true # Whether to enable Redis health check.\nmanagement.health.solr.enabled=true # Whether to enable Solr health check.\nmanagement.health.status.http-mapping= # Mapping of health statuses to HTTP status codes. By default, registered health statuses map to sensible defaults (for example, UP maps to 200).\nmanagement.health.status.order=DOWN,OUT_OF_SERVICE,UP,UNKNOWN # Comma-separated list of health statuses in order of severity.\n\n# HTTP TRACING (HttpTraceProperties)\nmanagement.trace.http.enabled=true # Whether to enable HTTP request-response tracing.\nmanagement.trace.http.include=request-headers,response-headers,cookies,errors # Items to be included in the trace.\n\n# INFO CONTRIBUTORS (InfoContributorProperties)\nmanagement.info.build.enabled=true # Whether to enable build info.\nmanagement.info.defaults.enabled=true # Whether to enable default info contributors.\nmanagement.info.env.enabled=true # Whether to enable environment info.\nmanagement.info.git.enabled=true # Whether to enable git info.\nmanagement.info.git.mode=simple # Mode to use to expose git information.\n\n# METRICS\nmanagement.metrics.binders.files.enabled=true # Whether to enable files metrics.\nmanagement.metrics.binders.integration.enabled=true # Whether to enable Spring Integration metrics.\nmanagement.metrics.binders.jvm.enabled=true # Whether to enable JVM metrics.\nmanagement.metrics.binders.logback.enabled=true # Whether to enable Logback metrics.\nmanagement.metrics.binders.processor.enabled=true # Whether to enable processor metrics.\nmanagement.metrics.binders.uptime.enabled=true # Whether to enable uptime metrics.\nmanagement.metrics.distribution.percentiles-histogram.*= # Whether meter IDs starting-with the specified name should be publish percentile histograms.\nmanagement.metrics.distribution.percentiles.*= # Specific computed non-aggregable percentiles to ship to the backend for meter IDs starting-with the specified name.\nmanagement.metrics.distribution.sla.*= # Specific SLA boundaries for meter IDs starting-with the specified name. The longest match wins, the key `all` can also be used to configure all meters.\nmanagement.metrics.enable.*= # Whether meter IDs starting-with the specified name should be enabled. The longest match wins, the key `all` can also be used to configure all meters.\nmanagement.metrics.export.atlas.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\nmanagement.metrics.export.atlas.config-refresh-frequency=10s # Frequency for refreshing config settings from the LWC service.\nmanagement.metrics.export.atlas.config-time-to-live=150s # Time to live for subscriptions from the LWC service.\nmanagement.metrics.export.atlas.config-uri=http://localhost:7101/lwc/api/v1/expressions/local-dev # URI for the Atlas LWC endpoint to retrieve current subscriptions.\nmanagement.metrics.export.atlas.connect-timeout=1s # Connection timeout for requests to this backend.\nmanagement.metrics.export.atlas.enabled=true # Whether exporting of metrics to this backend is enabled.\nmanagement.metrics.export.atlas.eval-uri=http://localhost:7101/lwc/api/v1/evaluate # URI for the Atlas LWC endpoint to evaluate the data for a subscription.\nmanagement.metrics.export.atlas.lwc-enabled=false # Whether to enable streaming to Atlas LWC.\nmanagement.metrics.export.atlas.meter-time-to-live=15m # Time to live for meters that do not have any activity. After this period the meter will be considered expired and will not get reported.\nmanagement.metrics.export.atlas.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\nmanagement.metrics.export.atlas.read-timeout=10s # Read timeout for requests to this backend.\nmanagement.metrics.export.atlas.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.atlas.uri=http://localhost:7101/api/v1/publish # URI of the Atlas server.\nmanagement.metrics.export.datadog.api-key= # Datadog API key.\nmanagement.metrics.export.datadog.application-key= # Datadog application key. Not strictly required, but improves the Datadog experience by sending meter descriptions, types, and base units to Datadog.\nmanagement.metrics.export.datadog.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\nmanagement.metrics.export.datadog.connect-timeout=1s # Connection timeout for requests to this backend.\nmanagement.metrics.export.datadog.descriptions=true # Whether to publish descriptions metadata to Datadog. Turn this off to minimize the amount of metadata sent.\nmanagement.metrics.export.datadog.enabled=true # Whether exporting of metrics to this backend is enabled.\nmanagement.metrics.export.datadog.host-tag=instance # Tag that will be mapped to "host" when shipping metrics to Datadog.\nmanagement.metrics.export.datadog.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\nmanagement.metrics.export.datadog.read-timeout=10s # Read timeout for requests to this backend.\nmanagement.metrics.export.datadog.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.datadog.uri=https://app.datadoghq.com # URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Datadog, you can define the location of the proxy with this.\nmanagement.metrics.export.ganglia.addressing-mode=multicast # UDP addressing mode, either unicast or multicast.\nmanagement.metrics.export.ganglia.duration-units=milliseconds # Base time unit used to report durations.\nmanagement.metrics.export.ganglia.enabled=true # Whether exporting of metrics to Ganglia is enabled.\nmanagement.metrics.export.ganglia.host=localhost # Host of the Ganglia server to receive exported metrics.\nmanagement.metrics.export.ganglia.port=8649 # Port of the Ganglia server to receive exported metrics.\nmanagement.metrics.export.ganglia.protocol-version=3.1 # Ganglia protocol version. Must be either 3.1 or 3.0.\nmanagement.metrics.export.ganglia.rate-units=seconds # Base time unit used to report rates.\nmanagement.metrics.export.ganglia.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.ganglia.time-to-live=1 # Time to live for metrics on Ganglia. Set the multi-cast Time-To-Live to be one greater than the number of hops (routers) between the hosts.\nmanagement.metrics.export.graphite.duration-units=milliseconds # Base time unit used to report durations.\nmanagement.metrics.export.graphite.enabled=true # Whether exporting of metrics to Graphite is enabled.\nmanagement.metrics.export.graphite.host=localhost # Host of the Graphite server to receive exported metrics.\nmanagement.metrics.export.graphite.port=2004 # Port of the Graphite server to receive exported metrics.\nmanagement.metrics.export.graphite.protocol=pickled # Protocol to use while shipping data to Graphite.\nmanagement.metrics.export.graphite.rate-units=seconds # Base time unit used to report rates.\nmanagement.metrics.export.graphite.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.graphite.tags-as-prefix= # For the default naming convention, turn the specified tag keys into part of the metric prefix.\nmanagement.metrics.export.influx.auto-create-db=true # Whether to create the Influx database if it does not exist before attempting to publish metrics to it.\nmanagement.metrics.export.influx.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\nmanagement.metrics.export.influx.compressed=true # Whether to enable GZIP compression of metrics batches published to Influx.\nmanagement.metrics.export.influx.connect-timeout=1s # Connection timeout for requests to this backend.\nmanagement.metrics.export.influx.consistency=one # Write consistency for each point.\nmanagement.metrics.export.influx.db=mydb # Tag that will be mapped to "host" when shipping metrics to Influx.\nmanagement.metrics.export.influx.enabled=true # Whether exporting of metrics to this backend is enabled.\nmanagement.metrics.export.influx.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\nmanagement.metrics.export.influx.password= # Login password of the Influx server.\nmanagement.metrics.export.influx.read-timeout=10s # Read timeout for requests to this backend.\nmanagement.metrics.export.influx.retention-policy= # Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).\nmanagement.metrics.export.influx.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.influx.uri=http://localhost:8086 # URI of the Influx server.\nmanagement.metrics.export.influx.user-name= # Login user of the Influx server.\nmanagement.metrics.export.jmx.enabled=true # Whether exporting of metrics to JMX is enabled.\nmanagement.metrics.export.jmx.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.newrelic.account-id= # New Relic account ID.\nmanagement.metrics.export.newrelic.api-key= # New Relic API key.\nmanagement.metrics.export.newrelic.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\nmanagement.metrics.export.newrelic.connect-timeout=1s # Connection timeout for requests to this backend.\nmanagement.metrics.export.newrelic.enabled=true # Whether exporting of metrics to this backend is enabled.\nmanagement.metrics.export.newrelic.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\nmanagement.metrics.export.newrelic.read-timeout=10s # Read timeout for requests to this backend.\nmanagement.metrics.export.newrelic.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.newrelic.uri=https://insights-collector.newrelic.com # URI to ship metrics to.\nmanagement.metrics.export.prometheus.descriptions=true # Whether to enable publishing descriptions as part of the scrape payload to Prometheus. Turn this off to minimize the amount of data sent on each scrape.\nmanagement.metrics.export.prometheus.enabled=true # Whether exporting of metrics to Prometheus is enabled.\nmanagement.metrics.export.prometheus.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.signalfx.access-token= # SignalFX access token.\nmanagement.metrics.export.signalfx.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\nmanagement.metrics.export.signalfx.connect-timeout=1s # Connection timeout for requests to this backend.\nmanagement.metrics.export.signalfx.enabled=true # Whether exporting of metrics to this backend is enabled.\nmanagement.metrics.export.signalfx.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\nmanagement.metrics.export.signalfx.read-timeout=10s # Read timeout for requests to this backend.\nmanagement.metrics.export.signalfx.source= # Uniquely identifies the app instance that is publishing metrics to SignalFx. Defaults to the local host name.\nmanagement.metrics.export.signalfx.step=10s # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.signalfx.uri=https://ingest.signalfx.com # URI to ship metrics to.\nmanagement.metrics.export.simple.enabled=true # Whether, in the absence of any other exporter, exporting of metrics to an in-memory backend is enabled.\nmanagement.metrics.export.simple.mode=cumulative # Counting mode.\nmanagement.metrics.export.simple.step=1m # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.statsd.enabled=true # Whether exporting of metrics to StatsD is enabled.\nmanagement.metrics.export.statsd.flavor=datadog # StatsD line protocol to use.\nmanagement.metrics.export.statsd.host=localhost # Host of the StatsD server to receive exported metrics.\nmanagement.metrics.export.statsd.max-packet-length=1400 # Total length of a single payload should be kept within your network\'s MTU.\nmanagement.metrics.export.statsd.polling-frequency=10s # How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed (or publishUnchangedMeters is true), it is sent to the StatsD server.\nmanagement.metrics.export.statsd.port=8125 # Port of the StatsD server to receive exported metrics.\nmanagement.metrics.export.statsd.publish-unchanged-meters=true # Whether to send unchanged meters to the StatsD server.\nmanagement.metrics.export.statsd.queue-size=2147483647 # Maximum size of the queue of items waiting to be sent to the StatsD server.\nmanagement.metrics.export.wavefront.api-token= # API token used when publishing metrics directly to the Wavefront API host.\nmanagement.metrics.export.wavefront.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\nmanagement.metrics.export.wavefront.connect-timeout=1s # Connection timeout for requests to this backend.\nmanagement.metrics.export.wavefront.enabled=true # Whether exporting of metrics to this backend is enabled.\nmanagement.metrics.export.wavefront.global-prefix= # Global prefix to separate metrics originating from this app\'s white box instrumentation from those originating from other Wavefront integrations when viewed in the Wavefront UI.\nmanagement.metrics.export.wavefront.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\nmanagement.metrics.export.wavefront.read-timeout=10s # Read timeout for requests to this backend.\nmanagement.metrics.export.wavefront.source= # Unique identifier for the app instance that is the source of metrics being published to Wavefront. Defaults to the local host name.\nmanagement.metrics.export.wavefront.step=10s # Step size (i.e. reporting frequency) to use.\nmanagement.metrics.export.wavefront.uri=https://longboard.wavefront.com # URI to ship metrics to.\nmanagement.metrics.use-global-registry=true # Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics.\nmanagement.metrics.web.client.max-uri-tags=100 # Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.\nmanagement.metrics.web.client.requests-metric-name=http.client.requests # Name of the metric for sent requests.\nmanagement.metrics.web.server.auto-time-requests=true # Whether requests handled by Spring MVC or WebFlux should be automatically timed.\nmanagement.metrics.web.server.requests-metric-name=http.server.requests # Name of the metric for received requests.\n\n\n# ----------------------------------------\n# DEVTOOLS PROPERTIES\n# ----------------------------------------\n\n# DEVTOOLS (DevToolsProperties)\nspring.devtools.livereload.enabled=true # Whether to enable a livereload.com-compatible server.\nspring.devtools.livereload.port=35729 # Server port.\nspring.devtools.restart.additional-exclude= # Additional patterns that should be excluded from triggering a full restart.\nspring.devtools.restart.additional-paths= # Additional paths to watch for changes.\nspring.devtools.restart.enabled=true # Whether to enable automatic restart.\nspring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties,META-INF/build-info.properties # Patterns that should be excluded from triggering a full restart.\nspring.devtools.restart.log-condition-evaluation-delta=true # Whether to log the condition evaluation delta upon restart.\nspring.devtools.restart.poll-interval=1s # Amount of time to wait between polling for classpath changes.\nspring.devtools.restart.quiet-period=400ms # Amount of quiet time required without any classpath changes before a restart is triggered.\nspring.devtools.restart.trigger-file= # Name of a specific file that, when changed, triggers the restart check. If not specified, any classpath file change triggers the restart.\n\n# REMOTE DEVTOOLS (RemoteDevToolsProperties)\nspring.devtools.remote.context-path=/.~~spring-boot!~ # Context path used to handle the remote connection.\nspring.devtools.remote.proxy.host= # The host of the proxy to use to connect to the remote application.\nspring.devtools.remote.proxy.port= # The port of the proxy to use to connect to the remote application.\nspring.devtools.remote.restart.enabled=true # Whether to enable remote restart.\nspring.devtools.remote.secret= # A shared secret required to establish a connection (required to enable remote support).\nspring.devtools.remote.secret-header-name=X-AUTH-TOKEN # HTTP header used to transfer the shared secret.\n\n\n# ----------------------------------------\n# TESTING PROPERTIES\n# ----------------------------------------\n\nspring.test.database.replace=any # Type of existing DataSource to replace.\nspring.test.mockmvc.print=default # MVC Print option.\n')))}h.isMDXComponent=!0}}]);