"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[50309],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return g}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=u(r),g=o,m=f["".concat(p,".").concat(g)]||f[g]||l[g]||a;return r?n.createElement(m,s(s({ref:t},c),{},{components:r})):n.createElement(m,s({ref:t},c))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},21079:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return l}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),s=["components"],i={},p=void 0,u={unversionedId:"IV. Spring Boot features/27.1.2. HttpMessageConverters",id:"IV. Spring Boot features/27.1.2. HttpMessageConverters",title:"27.1.2. HttpMessageConverters",description:"27.1.2. HttpMessageConverters",source:"@site/docs/IV. Spring Boot features/27.1.2. HttpMessageConverters.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/27.1.2. HttpMessageConverters",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/27.1.2. HttpMessageConverters",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/27.1.2. HttpMessageConverters.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"27.1.13. CORS support",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/27.1.13. CORS support"},next:{title:"27.1.3. Custom JSON Serializers and Deserializers",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/27.1.3. Custom JSON Serializers and Deserializers"}},c={},l=[{value:"27.1.2. HttpMessageConverters",id:"2712-httpmessageconverters",level:3}],f={toc:l};function g(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"2712-httpmessageconverters"},"27.1.2. HttpMessageConverters"),(0,a.kt)("p",null,"Spring MVC\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"HttpMessageConverter"),"\u63a5\u53e3\u8f6c\u6362HTTP\u8bf7\u6c42\u548c\u54cd\u5e94\u3002\u5408\u9002\u7684\u9ed8\u8ba4\u914d\u7f6e\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\uff0c\u4f8b\u5982\u5bf9\u8c61\u81ea\u52a8\u8f6c\u6362\u4e3aJSON\uff08\u4f7f\u7528Jackson\u5e93\uff09\u6216XML\uff08\u5982\u679cJackson XML\u6269\u5c55\u53ef\u7528\uff0c\u5426\u5219\u4f7f\u7528JAXB\uff09\uff0c\u5b57\u7b26\u4e32\u9ed8\u8ba4\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"UTF-8"),"\u7f16\u7801\u3002"),(0,a.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528Spring Boot\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"HttpMessageConverters"),"\u7c7b\u6dfb\u52a0\u6216\u81ea\u5b9a\u4e49\u8f6c\u6362\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"import org.springframework.boot.autoconfigure.web.HttpMessageConverters;\nimport org.springframework.context.annotation.*;\nimport org.springframework.http.converter.*;\n\n@Configuration\npublic class MyConfiguration {\n\n    @Bean\n    public HttpMessageConverters customConverters() {\n        HttpMessageConverter<?> additional = ...\n        HttpMessageConverter<?> another = ...\n        return new HttpMessageConverters(additional, another);\n    }\n}\n")),(0,a.kt)("p",null,"\u4e0a\u4e0b\u6587\u4e2d\u51fa\u73b0\u7684\u6240\u6709",(0,a.kt)("inlineCode",{parentName:"p"},"HttpMessageConverter")," bean\u90fd\u5c06\u6dfb\u52a0\u5230converters\u5217\u8868\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8986\u76d6\u9ed8\u8ba4\u7684\u8f6c\u6362\u5668\u5217\u8868\uff08converters\uff09\u3002"))}g.isMDXComponent=!0}}]);