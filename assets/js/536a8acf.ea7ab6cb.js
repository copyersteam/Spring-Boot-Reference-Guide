"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[68900],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),g=c(n),m=o,d=g["".concat(s,".").concat(m)]||g[m]||u[m]||i;return n?r.createElement(d,a(a({ref:t},l),{},{components:n})):r.createElement(d,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},84891:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return u}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],p={},s=void 0,c={unversionedId:"IV. Spring Boot features/43.3.8 Auto-configured Spring MVC Tests",id:"IV. Spring Boot features/43.3.8 Auto-configured Spring MVC Tests",title:"43.3.8 Auto-configured Spring MVC Tests",description:"43.3.8 \u81ea\u52a8\u914d\u7f6e\u7684Spring MVC\u6d4b\u8bd5",source:"@site/docs/IV. Spring Boot features/43.3.8 Auto-configured Spring MVC Tests.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/43.3.8 Auto-configured Spring MVC Tests",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.8 Auto-configured Spring MVC Tests",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/43.3.8 Auto-configured Spring MVC Tests.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"43.3.7 Auto-configured JSON Tests",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.7 Auto-configured JSON Tests"},next:{title:"43.3.9 Auto-configured Spring WebFlux Tests",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.3.9 Auto-configured Spring WebFlux Tests"}},l={},u=[{value:"43.3.8 \u81ea\u52a8\u914d\u7f6e\u7684Spring MVC\u6d4b\u8bd5",id:"4338-\u81ea\u52a8\u914d\u7f6e\u7684spring-mvc\u6d4b\u8bd5",level:3}],g={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"4338-\u81ea\u52a8\u914d\u7f6e\u7684spring-mvc\u6d4b\u8bd5"},"43.3.8 \u81ea\u52a8\u914d\u7f6e\u7684Spring MVC\u6d4b\u8bd5"),(0,i.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@WebMvcTest"),"\u68c0\u6d4bSpring MVC\u63a7\u5236\u5668\u662f\u5426\u5de5\u4f5c\u6b63\u5e38\u3002\u8be5\u6ce8\u89e3\u5c06\u81ea\u52a8\u914d\u7f6eSpring MVC\u8bbe\u65bd\uff0c\u5e76\u4e14\u53ea\u626b\u63cf\u6ce8\u89e3",(0,i.kt)("inlineCode",{parentName:"p"},"@Controller"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"@ControllerAdvice"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"@JsonComponent"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"Converter"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"GenericConverter"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"Filter"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"WebMvcConfigurer"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"HandlerMethodArgumentResolver"),"\u7684bean\u3002\u5176\u4ed6\u5e38\u89c4\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"@Component")," bean\u5c06\u4e0d\u4f1a\u88ab\u626b\u63cf\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," \u5982\u679c\u4f60\u9700\u8981\u6ce8\u518c\u989d\u5916\u7684\u7ec4\u4ef6\uff0c\u6bd4\u5982Jackson",(0,i.kt)("inlineCode",{parentName:"p"},"\u6a21\u5757"),"\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u6d4b\u8bd5\u4e0a\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@Import"),"\u6765\u5bfc\u5165\u53e6\u5916\u7684\u914d\u7f6e\u7c7b\u3002"),(0,i.kt)("p",null,"\u901a\u5e38",(0,i.kt)("inlineCode",{parentName:"p"},"@WebMvcTest"),"\u53ea\u9650\u4e8e\u5355\u4e2a\u63a7\u5236\u5668\uff08controller\uff09\u4f7f\u7528\uff0c\u5e76\u7ed3\u5408",(0,i.kt)("inlineCode",{parentName:"p"},"@MockBean"),"\u4ee5\u63d0\u4f9b\u9700\u8981\u7684\u534f\u4f5c\u8005\uff08collaborators\uff09\u7684mock\u5b9e\u73b0\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"@WebMvcTest"),"\u4e5f\u4f1a\u81ea\u52a8\u914d\u7f6e",(0,i.kt)("inlineCode",{parentName:"p"},"MockMvc"),"\uff0cMock MVC\u4e3a\u5feb\u901f\u6d4b\u8bd5MVC\u63a7\u5236\u5668\u63d0\u4f9b\u4e86\u4e00\u79cd\u5f3a\u5927\u7684\u65b9\u5f0f\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u5b8c\u6574\u7684HTTP\u670d\u52a1\u5668\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," \u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureMockMvc"),"\u6ce8\u89e3\u4e00\u4e2anon-",(0,i.kt)("inlineCode",{parentName:"p"},"@WebMvcTest"),"\u7684\u7c7b\uff08\u6bd4\u5982",(0,i.kt)("inlineCode",{parentName:"p"},"@SpringBootTest"),"\uff09\u4e5f\u53ef\u4ee5\u81ea\u52a8\u914d\u7f6e",(0,i.kt)("inlineCode",{parentName:"p"},"MockMvc"),"\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"MockMvc"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import org.junit.*;\nimport org.junit.runner.*;\nimport org.springframework.beans.factory.annotation.*;\nimport org.springframework.boot.test.autoconfigure.web.servlet.*;\nimport org.springframework.boot.test.mock.mockito.*;\n\nimport static org.assertj.core.api.Assertions.*;\nimport static org.mockito.BDDMockito.*;\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;\n\n@RunWith(SpringRunner.class)\n@WebMvcTest(UserVehicleController.class)\npublic class MyControllerTests {\n\n    @Autowired\n    private MockMvc mvc;\n\n    @MockBean\n    private UserVehicleService userVehicleService;\n\n    @Test\n    public void testExample() throws Exception {\n        given(this.userVehicleService.getVehicleDetails("sboot"))\n                .willReturn(new VehicleDetails("Honda", "Civic"));\n        this.mvc.perform(get("/sboot/vehicle").accept(MediaType.TEXT_PLAIN))\n                .andExpect(status().isOk()).andExpect(content().string("Honda Civic"));\n    }\n\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," \u5982\u679c\u9700\u8981\u5b9a\u4e49\u81ea\u5b9a\u914d\u7f6e\uff08auto-configuration\uff09\u7684\u5143\u7d20\uff08\u6bd4\u5982\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528servlet filters\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureMockMvc"),"\u7684\u5c5e\u6027\u3002"),(0,i.kt)("p",null,"\u5982\u679c\u4f60\u4f7f\u7528HtmlUnit\u6216Selenium\uff0c \u81ea\u52a8\u914d\u7f6e\u5c06\u63d0\u4f9b\u4e00\u4e2aHTMLUnit ",(0,i.kt)("inlineCode",{parentName:"p"},"WebClient")," bean\u548c/\u6216",(0,i.kt)("inlineCode",{parentName:"p"},"WebDriver")," bean\uff0c\u4ee5\u4e0b\u662f\u4f7f\u7528HtmlUnit\u7684\u793a\u4f8b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import com.gargoylesoftware.htmlunit.*;\nimport org.junit.*;\nimport org.junit.runner.*;\nimport org.springframework.beans.factory.annotation.*;\nimport org.springframework.boot.test.autoconfigure.web.servlet.*;\nimport org.springframework.boot.test.mock.mockito.*;\n\nimport static org.assertj.core.api.Assertions.*;\nimport static org.mockito.BDDMockito.*;\n\n@RunWith(SpringRunner.class)\n@WebMvcTest(UserVehicleController.class)\npublic class MyHtmlUnitTests {\n\n    @Autowired\n    private WebClient webClient;\n\n    @MockBean\n    private UserVehicleService userVehicleService;\n\n    @Test\n    public void testExample() throws Exception {\n        given(this.userVehicleService.getVehicleDetails("sboot"))\n                .willReturn(new VehicleDetails("Honda", "Civic"));\n        HtmlPage page = this.webClient.getPage("/sboot/vehicle.html");\n        assertThat(page.getBody().getTextContent()).isEqualTo("Honda Civic");\n    }\n\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," \u9ed8\u8ba4\u5730\uff0c\u4e3a\u4e86\u786e\u4fdd\u9a71\u52a8\u5668\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u540e\u9000\u51fa\uff0c\u800c\u4e14\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u88ab\u6ce8\u5165\uff0cSpring Boot\u5c06\u4f1a\u628a",(0,i.kt)("inlineCode",{parentName:"p"},"WebDriver"),"bean\u653e\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u201c\u4f5c\u7528\u57df\u201d\u91cc\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u8981\u8fd9\u4e2a\u884c\u4e3a\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"WebDriver``@Bean"),"\u5b9a\u4e49\u4e0a\u52a0\u4e0a",(0,i.kt)("inlineCode",{parentName:"p"},'@Scope("singleton")'),"\u3002"),(0,i.kt)("p",null,"\u5728",(0,i.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/2.0.0.RELEASE/reference/htmlsingle/#test-auto-configuration"},"\u9644\u5f55"),"\u4e2d\u53ef\u4ee5\u67e5\u770b",(0,i.kt)("inlineCode",{parentName:"p"},"@WebMvcTest"),"\u5f00\u542f\u7684\u81ea\u52a8\u914d\u7f6e\u5217\u8868\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8")," \u6709\u65f6\uff0c\u5149\u5149\u7f16\u5199Spring MVC\u6d4b\u8bd5\u662f\u4e0d\u591f\u7684\u3002Spring Boot\u53ef\u4ee5\u5e2e\u52a9\u4f60",(0,i.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/2.0.0.RELEASE/reference/htmlsingle/#boot-features-testing-spring-boot-applications-testing-with-running-server"},"\u5728\u5b9e\u9645\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u5b8c\u6574\u7684\u7aef\u5230\u7aef\u7684\u6d4b\u8bd5"),"\u3002"))}m.isMDXComponent=!0}}]);