"use strict";(self.webpackChunkspring=self.webpackChunkspring||[]).push([[67569],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},23411:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),s=["components"],i={},p=void 0,l={unversionedId:"IV. Spring Boot features/43.4.4 TestRestTemplate",id:"IV. Spring Boot features/43.4.4 TestRestTemplate",title:"43.4.4 TestRestTemplate",description:"43.4.4 TestRestTemplate",source:"@site/docs/IV. Spring Boot features/43.4.4 TestRestTemplate.md",sourceDirName:"IV. Spring Boot features",slug:"/IV. Spring Boot features/43.4.4 TestRestTemplate",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.4.4 TestRestTemplate",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IV. Spring Boot features/43.4.4 TestRestTemplate.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"43.4.3 OutputCapture",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/43.4.3 OutputCapture"},next:{title:"46.1 Understanding Auto-configured Beans",permalink:"/Spring-Boot-Reference-Guide/docs/IV. Spring Boot features/46.1 Understanding Auto-configured Beans"}},u={},c=[{value:"43.4.4 TestRestTemplate",id:"4344-testresttemplate",level:3}],m={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"4344-testresttemplate"},"43.4.4 TestRestTemplate"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u6ce8")," Spring Framework 5.0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"WebTestClient"),"\u3002\u5b83\u670d\u52a1\u4e8e",(0,o.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/2.0.0.RELEASE/reference/htmlsingle/#boot-features-testing-spring-boot-applications-testing-autoconfigured-webflux-tests"},"WebFlux\u96c6\u6210\u6d4b\u8bd5"),"\u4e0e",(0,o.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/2.0.0.RELEASE/reference/htmlsingle/#boot-features-testing-spring-boot-applications-testing-with-running-server"},"WebFlux\u4e0eMVC\u7aef\u5230\u7aef\u6d4b\u8bd5"),"\u3002\u4e0d\u50cf",(0,o.kt)("inlineCode",{parentName:"p"},"TestRestTemplate"),"\uff0c\u5b83\u4e3a\u65ad\u8a00\u63d0\u4f9b\u4e86\u6d41\u7545\u7684API\u3002"),(0,o.kt)("p",null,"\u5728\u96c6\u6210\u6d4b\u8bd5\u4e2d,",(0,o.kt)("inlineCode",{parentName:"p"},"TestRestTemplate"),"\u662fSpring ",(0,o.kt)("inlineCode",{parentName:"p"},"RestTemplate"),"\u7684\u4fbf\u5229\u66ff\u4ee3\u3002\u4f60\u53ef\u4ee5\u83b7\u53d6\u4e00\u4e2a\u666e\u901a\u7684\u6216\u53d1\u9001\u57fa\u672cHTTP\u8ba4\u8bc1\uff08\u4f7f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\uff09\u7684\u6a21\u677f\u3002\u4e0d\u7ba1\u54ea\u79cd\u60c5\u51b5\uff0c\u8fd9\u4e9b\u6a21\u677f\u90fd\u5bf9\u6d4b\u8bd5\u53cb\u597d\uff0c\u5bf9\u4e8e\u670d\u52a1\u7aef\u9519\u8bef\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u63a8\u8350\u4f7f\u7528Apache HTTP Client(4.3.2\u6216\u66f4\u9ad8\u7248\u672c)\uff0c\u4f46\u4e0d\u5f3a\u5236\u8fd9\u6837\u505a\u3002\u5982\u679c\u76f8\u5173\u5e93\u5728classpath\u4e0b\u5b58\u5728\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"TestRestTemplate"),"\u5c06\u4ee5\u6b63\u786e\u914d\u7f6e\u7684client\u8fdb\u884c\u54cd\u5e94\u3002\u5982\u679c\u4f60\u4f7f\u7528Apache\u7684HTTP\u5ba2\u6237\u7aef\uff0c\u4e00\u4e9b\u989d\u5916\u7684\u6d4b\u8bd5\u53cb\u597d\u7684\u7279\u6027\u5c06\u4f1a\u88ab\u542f\u7528\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u91cd\u5b9a\u5411\u4e0d\u4f1a\u88ab\u8ddf\u8e2a\uff08\u6240\u4ee5\u4f60\u53ef\u4ee5\u65ad\u8a00\u56de\u5e94\u7684\u4f4d\u7f6e\uff09 "),(0,o.kt)("li",{parentName:"ul"},"Cookies\u5c06\u4f1a\u88ab\u5ffd\u7565\uff08\u6240\u4ee5\u6a21\u7248\u662f\u65e0\u72b6\u6001\u7684\uff09")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"TestRestTemplate"),"\u80fd\u591f\u5728\u4f60\u7684\u96c6\u6210\u6d4b\u8bd5\u4e2d\u88ab\u76f4\u63a5\u5b9e\u4f8b\u5316\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public class MyTest {\n\n    private TestRestTemplate template = new TestRestTemplate();\n\n    @Test\n    public void testRequest() throws Exception {\n        HttpHeaders headers = this.template.getForEntity(\n                "http://myhost.example.com/example", String.class).getHeaders();\n        assertThat(headers.getLocation()).hasHost("other.example.com");\n    }\n\n}\n')),(0,o.kt)("p",null,"\u6216\u8005\uff0c\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"@SpringBootTest"),"\uff0c\u4e14\u8bbe\u7f6e\u4e86",(0,o.kt)("inlineCode",{parentName:"p"},"WebEnvironment.RANDOM_PORT"),"\u6216",(0,o.kt)("inlineCode",{parentName:"p"},"WebEnvironment.DEFINED_PORT"),"\u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u6ce8\u5165\u4e00\u4e2a\u914d\u7f6e\u5b8c\u5168\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"TestRestTemplate"),"\uff0c\u5e76\u5f00\u59cb\u4f7f\u7528\u5b83\u3002\u5982\u679c\u6709\u9700\u8981\uff0c\u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7",(0,o.kt)("inlineCode",{parentName:"p"},"RestTemplateBuilder")," bean\u8fdb\u884c\u989d\u5916\u7684\u81ea\u5b9a\u4e49\u3002\u4efb\u4f55\u6ca1\u6709\u6307\u5b9a\u4e3b\u673a\u548c\u7aef\u53e3\u7684URL\u5c06\u4f1a\u81ea\u52a8\u8fde\u63a5\u5230\u5185\u5d4c\u7684\u670d\u52a1\u5668\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'@RunWith(SpringRunner.class)\n@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\npublic class SampleWebClientTests {\n\n    @Autowired\n    private TestRestTemplate template;\n\n    @Test\n    public void testRequest() {\n        HttpHeaders headers = this.template.getForEntity("/example", String.class)\n                .getHeaders();\n        assertThat(headers.getLocation()).hasHost("other.example.com");\n    }\n\n    @TestConfiguration\n    static class Config {\n\n        @Bean\n        public RestTemplateBuilder restTemplateBuilder() {\n            return new RestTemplateBuilder().setConnectTimeout(1000).setReadTimeout(1000);\n        }\n\n    }\n\n}\n')))}d.isMDXComponent=!0}}]);